/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1071.0, "minX": 0.0, "maxY": 13506.0, "series": [{"data": [[0.0, 1268.0], [0.1, 1268.0], [0.2, 1299.0], [0.3, 1299.0], [0.4, 1312.0], [0.5, 1312.0], [0.6, 1312.0], [0.7, 1330.0], [0.8, 1330.0], [0.9, 1364.0], [1.0, 1364.0], [1.1, 1364.0], [1.2, 1370.0], [1.3, 1370.0], [1.4, 1371.0], [1.5, 1371.0], [1.6, 1373.0], [1.7, 1374.0], [1.8, 1374.0], [1.9, 1382.0], [2.0, 1382.0], [2.1, 1386.0], [2.2, 1388.0], [2.3, 1388.0], [2.4, 1401.0], [2.5, 1401.0], [2.6, 1405.0], [2.7, 1418.0], [2.8, 1418.0], [2.9, 1419.0], [3.0, 1419.0], [3.1, 1420.0], [3.2, 1425.0], [3.3, 1425.0], [3.4, 1428.0], [3.5, 1428.0], [3.6, 1431.0], [3.7, 1439.0], [3.8, 1439.0], [3.9, 1439.0], [4.0, 1439.0], [4.1, 1443.0], [4.2, 1447.0], [4.3, 1447.0], [4.4, 1448.0], [4.5, 1448.0], [4.6, 1452.0], [4.7, 1454.0], [4.8, 1454.0], [4.9, 1461.0], [5.0, 1461.0], [5.1, 1468.0], [5.2, 1470.0], [5.3, 1470.0], [5.4, 1475.0], [5.5, 1475.0], [5.6, 1475.0], [5.7, 1476.0], [5.8, 1476.0], [5.9, 1486.0], [6.0, 1486.0], [6.1, 1488.0], [6.2, 1488.0], [6.3, 1488.0], [6.4, 1488.0], [6.5, 1488.0], [6.6, 1496.0], [6.7, 1498.0], [6.8, 1498.0], [6.9, 1501.0], [7.0, 1501.0], [7.1, 1504.0], [7.2, 1517.0], [7.3, 1517.0], [7.4, 1517.0], [7.5, 1517.0], [7.6, 1518.0], [7.7, 1519.0], [7.8, 1519.0], [7.9, 1524.0], [8.0, 1524.0], [8.1, 1525.0], [8.2, 1533.0], [8.3, 1533.0], [8.4, 1534.0], [8.5, 1534.0], [8.6, 1545.0], [8.7, 1546.0], [8.8, 1546.0], [8.9, 1546.0], [9.0, 1546.0], [9.1, 1553.0], [9.2, 1558.0], [9.3, 1558.0], [9.4, 1564.0], [9.5, 1564.0], [9.6, 1576.0], [9.7, 1577.0], [9.8, 1577.0], [9.9, 1579.0], [10.0, 1579.0], [10.1, 1597.0], [10.2, 1597.0], [10.3, 1600.0], [10.4, 1602.0], [10.5, 1602.0], [10.6, 1603.0], [10.7, 1603.0], [10.8, 1608.0], [10.9, 1609.0], [11.0, 1609.0], [11.1, 1610.0], [11.2, 1610.0], [11.3, 1613.0], [11.4, 1614.0], [11.5, 1614.0], [11.6, 1615.0], [11.7, 1615.0], [11.8, 1617.0], [11.9, 1622.0], [12.0, 1622.0], [12.1, 1624.0], [12.2, 1624.0], [12.3, 1628.0], [12.4, 1630.0], [12.5, 1630.0], [12.6, 1631.0], [12.7, 1631.0], [12.8, 1633.0], [12.9, 1633.0], [13.0, 1633.0], [13.1, 1634.0], [13.2, 1634.0], [13.3, 1634.0], [13.4, 1637.0], [13.5, 1637.0], [13.6, 1642.0], [13.7, 1642.0], [13.8, 1644.0], [13.9, 1646.0], [14.0, 1646.0], [14.1, 1647.0], [14.2, 1647.0], [14.3, 1647.0], [14.4, 1648.0], [14.5, 1648.0], [14.6, 1648.0], [14.7, 1648.0], [14.8, 1649.0], [14.9, 1650.0], [15.0, 1650.0], [15.1, 1652.0], [15.2, 1652.0], [15.3, 1653.0], [15.4, 1653.0], [15.5, 1653.0], [15.6, 1655.0], [15.7, 1655.0], [15.8, 1656.0], [15.9, 1658.0], [16.0, 1658.0], [16.1, 1659.0], [16.2, 1659.0], [16.3, 1660.0], [16.4, 1662.0], [16.5, 1662.0], [16.6, 1662.0], [16.7, 1662.0], [16.8, 1663.0], [16.9, 1665.0], [17.0, 1665.0], [17.1, 1665.0], [17.2, 1665.0], [17.3, 1665.0], [17.4, 1666.0], [17.5, 1666.0], [17.6, 1671.0], [17.7, 1671.0], [17.8, 1671.0], [17.9, 1671.0], [18.0, 1671.0], [18.1, 1671.0], [18.2, 1671.0], [18.3, 1673.0], [18.4, 1674.0], [18.5, 1674.0], [18.6, 1675.0], [18.7, 1675.0], [18.8, 1677.0], [18.9, 1677.0], [19.0, 1677.0], [19.1, 1681.0], [19.2, 1681.0], [19.3, 1682.0], [19.4, 1693.0], [19.5, 1693.0], [19.6, 1695.0], [19.7, 1695.0], [19.8, 1696.0], [19.9, 1697.0], [20.0, 1697.0], [20.1, 1700.0], [20.2, 1700.0], [20.3, 1703.0], [20.4, 1703.0], [20.5, 1705.0], [20.6, 1705.0], [20.7, 1705.0], [20.8, 1705.0], [20.9, 1705.0], [21.0, 1705.0], [21.1, 1709.0], [21.2, 1709.0], [21.3, 1710.0], [21.4, 1710.0], [21.5, 1710.0], [21.6, 1713.0], [21.7, 1713.0], [21.8, 1713.0], [21.9, 1713.0], [22.0, 1714.0], [22.1, 1716.0], [22.2, 1716.0], [22.3, 1718.0], [22.4, 1718.0], [22.5, 1721.0], [22.6, 1721.0], [22.7, 1721.0], [22.8, 1721.0], [22.9, 1721.0], [23.0, 1722.0], [23.1, 1724.0], [23.2, 1724.0], [23.3, 1725.0], [23.4, 1725.0], [23.5, 1728.0], [23.6, 1731.0], [23.7, 1731.0], [23.8, 1732.0], [23.9, 1732.0], [24.0, 1732.0], [24.1, 1736.0], [24.2, 1736.0], [24.3, 1737.0], [24.4, 1737.0], [24.5, 1738.0], [24.6, 1739.0], [24.7, 1739.0], [24.8, 1744.0], [24.9, 1744.0], [25.0, 1745.0], [25.1, 1746.0], [25.2, 1746.0], [25.3, 1747.0], [25.4, 1747.0], [25.5, 1752.0], [25.6, 1753.0], [25.7, 1753.0], [25.8, 1757.0], [25.9, 1757.0], [26.0, 1759.0], [26.1, 1769.0], [26.2, 1769.0], [26.3, 1773.0], [26.4, 1773.0], [26.5, 1775.0], [26.6, 1776.0], [26.7, 1776.0], [26.8, 1776.0], [26.9, 1776.0], [27.0, 1778.0], [27.1, 1778.0], [27.2, 1778.0], [27.3, 1781.0], [27.4, 1781.0], [27.5, 1783.0], [27.6, 1791.0], [27.7, 1791.0], [27.8, 1792.0], [27.9, 1792.0], [28.0, 1792.0], [28.1, 1793.0], [28.2, 1793.0], [28.3, 1793.0], [28.4, 1793.0], [28.5, 1795.0], [28.6, 1799.0], [28.7, 1799.0], [28.8, 1801.0], [28.9, 1801.0], [29.0, 1806.0], [29.1, 1809.0], [29.2, 1809.0], [29.3, 1809.0], [29.4, 1809.0], [29.5, 1812.0], [29.6, 1812.0], [29.7, 1812.0], [29.8, 1813.0], [29.9, 1813.0], [30.0, 1813.0], [30.1, 1813.0], [30.2, 1814.0], [30.3, 1818.0], [30.4, 1818.0], [30.5, 1819.0], [30.6, 1819.0], [30.7, 1820.0], [30.8, 1828.0], [30.9, 1828.0], [31.0, 1830.0], [31.1, 1830.0], [31.2, 1832.0], [31.3, 1836.0], [31.4, 1836.0], [31.5, 1837.0], [31.6, 1837.0], [31.7, 1842.0], [31.8, 1844.0], [31.9, 1844.0], [32.0, 1849.0], [32.1, 1849.0], [32.2, 1851.0], [32.3, 1852.0], [32.4, 1852.0], [32.5, 1852.0], [32.6, 1852.0], [32.7, 1854.0], [32.8, 1854.0], [32.9, 1854.0], [33.0, 1855.0], [33.1, 1855.0], [33.2, 1857.0], [33.3, 1862.0], [33.4, 1862.0], [33.5, 1864.0], [33.6, 1864.0], [33.7, 1866.0], [33.8, 1866.0], [33.9, 1866.0], [34.0, 1872.0], [34.1, 1872.0], [34.2, 1876.0], [34.3, 1877.0], [34.4, 1877.0], [34.5, 1883.0], [34.6, 1883.0], [34.7, 1883.0], [34.8, 1885.0], [34.9, 1885.0], [35.0, 1887.0], [35.1, 1887.0], [35.2, 1890.0], [35.3, 1890.0], [35.4, 1890.0], [35.5, 1891.0], [35.6, 1891.0], [35.7, 1892.0], [35.8, 1895.0], [35.9, 1895.0], [36.0, 1895.0], [36.1, 1895.0], [36.2, 1897.0], [36.3, 1899.0], [36.4, 1899.0], [36.5, 1900.0], [36.6, 1900.0], [36.7, 1900.0], [36.8, 1902.0], [36.9, 1902.0], [37.0, 1905.0], [37.1, 1905.0], [37.2, 1906.0], [37.3, 1907.0], [37.4, 1907.0], [37.5, 1912.0], [37.6, 1912.0], [37.7, 1913.0], [37.8, 1913.0], [37.9, 1913.0], [38.0, 1913.0], [38.1, 1913.0], [38.2, 1915.0], [38.3, 1921.0], [38.4, 1921.0], [38.5, 1921.0], [38.6, 1921.0], [38.7, 1924.0], [38.8, 1924.0], [38.9, 1924.0], [39.0, 1928.0], [39.1, 1928.0], [39.2, 1928.0], [39.3, 1928.0], [39.4, 1928.0], [39.5, 1936.0], [39.6, 1936.0], [39.7, 1938.0], [39.8, 1939.0], [39.9, 1939.0], [40.0, 1945.0], [40.1, 1945.0], [40.2, 1946.0], [40.3, 1946.0], [40.4, 1950.0], [40.5, 1951.0], [40.6, 1951.0], [40.7, 1951.0], [40.8, 1951.0], [40.9, 1952.0], [41.0, 1957.0], [41.1, 1957.0], [41.2, 1958.0], [41.3, 1958.0], [41.4, 1961.0], [41.5, 1962.0], [41.6, 1962.0], [41.7, 1964.0], [41.8, 1964.0], [41.9, 1967.0], [42.0, 1970.0], [42.1, 1970.0], [42.2, 1970.0], [42.3, 1970.0], [42.4, 1971.0], [42.5, 1972.0], [42.6, 1972.0], [42.7, 1972.0], [42.8, 1972.0], [42.9, 1972.0], [43.0, 1974.0], [43.1, 1974.0], [43.2, 1975.0], [43.3, 1975.0], [43.4, 1977.0], [43.5, 1977.0], [43.6, 1977.0], [43.7, 1980.0], [43.8, 1980.0], [43.9, 1983.0], [44.0, 1984.0], [44.1, 1984.0], [44.2, 1985.0], [44.3, 1985.0], [44.4, 1991.0], [44.5, 1992.0], [44.6, 1992.0], [44.7, 1999.0], [44.8, 1999.0], [44.9, 2003.0], [45.0, 2004.0], [45.1, 2004.0], [45.2, 2006.0], [45.3, 2006.0], [45.4, 2006.0], [45.5, 2008.0], [45.6, 2008.0], [45.7, 2010.0], [45.8, 2010.0], [45.9, 2011.0], [46.0, 2014.0], [46.1, 2014.0], [46.2, 2016.0], [46.3, 2016.0], [46.4, 2018.0], [46.5, 2020.0], [46.6, 2020.0], [46.7, 2020.0], [46.8, 2020.0], [46.9, 2020.0], [47.0, 2020.0], [47.1, 2020.0], [47.2, 2021.0], [47.3, 2021.0], [47.4, 2022.0], [47.5, 2023.0], [47.6, 2023.0], [47.7, 2024.0], [47.8, 2024.0], [47.9, 2029.0], [48.0, 2029.0], [48.1, 2029.0], [48.2, 2033.0], [48.3, 2033.0], [48.4, 2039.0], [48.5, 2041.0], [48.6, 2041.0], [48.7, 2048.0], [48.8, 2048.0], [48.9, 2049.0], [49.0, 2051.0], [49.1, 2051.0], [49.2, 2051.0], [49.3, 2051.0], [49.4, 2053.0], [49.5, 2054.0], [49.6, 2054.0], [49.7, 2058.0], [49.8, 2058.0], [49.9, 2058.0], [50.0, 2058.0], [50.1, 2060.0], [50.2, 2063.0], [50.3, 2063.0], [50.4, 2063.0], [50.5, 2063.0], [50.6, 2065.0], [50.7, 2066.0], [50.8, 2066.0], [50.9, 2067.0], [51.0, 2067.0], [51.1, 2067.0], [51.2, 2067.0], [51.3, 2067.0], [51.4, 2068.0], [51.5, 2068.0], [51.6, 2068.0], [51.7, 2069.0], [51.8, 2069.0], [51.9, 2070.0], [52.0, 2070.0], [52.1, 2070.0], [52.2, 2070.0], [52.3, 2070.0], [52.4, 2070.0], [52.5, 2070.0], [52.6, 2072.0], [52.7, 2073.0], [52.8, 2073.0], [52.9, 2074.0], [53.0, 2074.0], [53.1, 2074.0], [53.2, 2074.0], [53.3, 2074.0], [53.4, 2076.0], [53.5, 2076.0], [53.6, 2076.0], [53.7, 2078.0], [53.8, 2078.0], [53.9, 2079.0], [54.0, 2079.0], [54.1, 2082.0], [54.2, 2083.0], [54.3, 2083.0], [54.4, 2083.0], [54.5, 2083.0], [54.6, 2088.0], [54.7, 2088.0], [54.8, 2088.0], [54.9, 2088.0], [55.0, 2088.0], [55.1, 2100.0], [55.2, 2103.0], [55.3, 2103.0], [55.4, 2105.0], [55.5, 2105.0], [55.6, 2107.0], [55.7, 2108.0], [55.8, 2108.0], [55.9, 2109.0], [56.0, 2109.0], [56.1, 2109.0], [56.2, 2110.0], [56.3, 2110.0], [56.4, 2111.0], [56.5, 2111.0], [56.6, 2112.0], [56.7, 2113.0], [56.8, 2113.0], [56.9, 2117.0], [57.0, 2117.0], [57.1, 2118.0], [57.2, 2121.0], [57.3, 2121.0], [57.4, 2123.0], [57.5, 2123.0], [57.6, 2123.0], [57.7, 2126.0], [57.8, 2126.0], [57.9, 2126.0], [58.0, 2126.0], [58.1, 2129.0], [58.2, 2134.0], [58.3, 2134.0], [58.4, 2135.0], [58.5, 2135.0], [58.6, 2136.0], [58.7, 2138.0], [58.8, 2138.0], [58.9, 2146.0], [59.0, 2146.0], [59.1, 2147.0], [59.2, 2150.0], [59.3, 2150.0], [59.4, 2154.0], [59.5, 2154.0], [59.6, 2158.0], [59.7, 2160.0], [59.8, 2160.0], [59.9, 2160.0], [60.0, 2160.0], [60.1, 2162.0], [60.2, 2162.0], [60.3, 2163.0], [60.4, 2175.0], [60.5, 2175.0], [60.6, 2176.0], [60.7, 2176.0], [60.8, 2178.0], [60.9, 2179.0], [61.0, 2179.0], [61.1, 2180.0], [61.2, 2180.0], [61.3, 2181.0], [61.4, 2189.0], [61.5, 2189.0], [61.6, 2190.0], [61.7, 2190.0], [61.8, 2192.0], [61.9, 2193.0], [62.0, 2193.0], [62.1, 2195.0], [62.2, 2195.0], [62.3, 2199.0], [62.4, 2201.0], [62.5, 2201.0], [62.6, 2202.0], [62.7, 2202.0], [62.8, 2203.0], [62.9, 2205.0], [63.0, 2205.0], [63.1, 2209.0], [63.2, 2209.0], [63.3, 2210.0], [63.4, 2211.0], [63.5, 2211.0], [63.6, 2213.0], [63.7, 2213.0], [63.8, 2216.0], [63.9, 2218.0], [64.0, 2218.0], [64.1, 2219.0], [64.2, 2219.0], [64.3, 2219.0], [64.4, 2220.0], [64.5, 2220.0], [64.6, 2221.0], [64.7, 2221.0], [64.8, 2221.0], [64.9, 2226.0], [65.0, 2226.0], [65.1, 2227.0], [65.2, 2227.0], [65.3, 2229.0], [65.4, 2236.0], [65.5, 2236.0], [65.6, 2239.0], [65.7, 2239.0], [65.8, 2242.0], [65.9, 2243.0], [66.0, 2243.0], [66.1, 2245.0], [66.2, 2245.0], [66.3, 2248.0], [66.4, 2254.0], [66.5, 2254.0], [66.6, 2256.0], [66.7, 2256.0], [66.8, 2257.0], [66.9, 2257.0], [67.0, 2257.0], [67.1, 2258.0], [67.2, 2258.0], [67.3, 2261.0], [67.4, 2262.0], [67.5, 2262.0], [67.6, 2262.0], [67.7, 2262.0], [67.8, 2264.0], [67.9, 2268.0], [68.0, 2268.0], [68.1, 2269.0], [68.2, 2269.0], [68.3, 2270.0], [68.4, 2275.0], [68.5, 2275.0], [68.6, 2277.0], [68.7, 2277.0], [68.8, 2281.0], [68.9, 2284.0], [69.0, 2284.0], [69.1, 2285.0], [69.2, 2285.0], [69.3, 2290.0], [69.4, 2291.0], [69.5, 2291.0], [69.6, 2292.0], [69.7, 2292.0], [69.8, 2292.0], [69.9, 2297.0], [70.0, 2297.0], [70.1, 2300.0], [70.2, 2300.0], [70.3, 2301.0], [70.4, 2301.0], [70.5, 2306.0], [70.6, 2306.0], [70.7, 2306.0], [70.8, 2307.0], [70.9, 2307.0], [71.0, 2308.0], [71.1, 2308.0], [71.2, 2308.0], [71.3, 2308.0], [71.4, 2308.0], [71.5, 2310.0], [71.6, 2314.0], [71.7, 2314.0], [71.8, 2315.0], [71.9, 2315.0], [72.0, 2318.0], [72.1, 2321.0], [72.2, 2321.0], [72.3, 2323.0], [72.4, 2323.0], [72.5, 2324.0], [72.6, 2326.0], [72.7, 2326.0], [72.8, 2332.0], [72.9, 2332.0], [73.0, 2332.0], [73.1, 2335.0], [73.2, 2335.0], [73.3, 2336.0], [73.4, 2336.0], [73.5, 2336.0], [73.6, 2336.0], [73.7, 2336.0], [73.8, 2338.0], [73.9, 2338.0], [74.0, 2338.0], [74.1, 2339.0], [74.2, 2339.0], [74.3, 2340.0], [74.4, 2340.0], [74.5, 2340.0], [74.6, 2341.0], [74.7, 2341.0], [74.8, 2342.0], [74.9, 2342.0], [75.0, 2343.0], [75.1, 2344.0], [75.2, 2344.0], [75.3, 2357.0], [75.4, 2357.0], [75.5, 2365.0], [75.6, 2366.0], [75.7, 2366.0], [75.8, 2368.0], [75.9, 2368.0], [76.0, 2373.0], [76.1, 2374.0], [76.2, 2374.0], [76.3, 2382.0], [76.4, 2382.0], [76.5, 2385.0], [76.6, 2385.0], [76.7, 2385.0], [76.8, 2386.0], [76.9, 2386.0], [77.0, 2390.0], [77.1, 2394.0], [77.2, 2394.0], [77.3, 2412.0], [77.4, 2412.0], [77.5, 2418.0], [77.6, 2418.0], [77.7, 2418.0], [77.8, 2432.0], [77.9, 2432.0], [78.0, 2434.0], [78.1, 2435.0], [78.2, 2435.0], [78.3, 2435.0], [78.4, 2435.0], [78.5, 2435.0], [78.6, 2438.0], [78.7, 2438.0], [78.8, 2440.0], [78.9, 2440.0], [79.0, 2441.0], [79.1, 2441.0], [79.2, 2441.0], [79.3, 2442.0], [79.4, 2442.0], [79.5, 2442.0], [79.6, 2444.0], [79.7, 2444.0], [79.8, 2444.0], [79.9, 2444.0], [80.0, 2447.0], [80.1, 2447.0], [80.2, 2453.0], [80.3, 2458.0], [80.4, 2458.0], [80.5, 2459.0], [80.6, 2459.0], [80.7, 2465.0], [80.8, 2466.0], [80.9, 2466.0], [81.0, 2466.0], [81.1, 2466.0], [81.2, 2469.0], [81.3, 2473.0], [81.4, 2473.0], [81.5, 2475.0], [81.6, 2475.0], [81.7, 2475.0], [81.8, 2478.0], [81.9, 2478.0], [82.0, 2478.0], [82.1, 2478.0], [82.2, 2482.0], [82.3, 2486.0], [82.4, 2486.0], [82.5, 2487.0], [82.6, 2487.0], [82.7, 2491.0], [82.8, 2495.0], [82.9, 2495.0], [83.0, 2498.0], [83.1, 2498.0], [83.2, 2509.0], [83.3, 2515.0], [83.4, 2515.0], [83.5, 2517.0], [83.6, 2517.0], [83.7, 2519.0], [83.8, 2522.0], [83.9, 2522.0], [84.0, 2530.0], [84.1, 2530.0], [84.2, 2531.0], [84.3, 2532.0], [84.4, 2532.0], [84.5, 2533.0], [84.6, 2533.0], [84.7, 2535.0], [84.8, 2545.0], [84.9, 2545.0], [85.0, 2546.0], [85.1, 2546.0], [85.2, 2549.0], [85.3, 2558.0], [85.4, 2558.0], [85.5, 2561.0], [85.6, 2561.0], [85.7, 2562.0], [85.8, 2570.0], [85.9, 2570.0], [86.0, 2574.0], [86.1, 2574.0], [86.2, 2578.0], [86.3, 2581.0], [86.4, 2581.0], [86.5, 2585.0], [86.6, 2585.0], [86.7, 2588.0], [86.8, 2590.0], [86.9, 2590.0], [87.0, 2595.0], [87.1, 2595.0], [87.2, 2599.0], [87.3, 2616.0], [87.4, 2616.0], [87.5, 2620.0], [87.6, 2620.0], [87.7, 2622.0], [87.8, 2626.0], [87.9, 2626.0], [88.0, 2637.0], [88.1, 2637.0], [88.2, 2637.0], [88.3, 2638.0], [88.4, 2638.0], [88.5, 2642.0], [88.6, 2642.0], [88.7, 2643.0], [88.8, 2664.0], [88.9, 2664.0], [89.0, 2671.0], [89.1, 2671.0], [89.2, 2679.0], [89.3, 2689.0], [89.4, 2689.0], [89.5, 2698.0], [89.6, 2698.0], [89.7, 2705.0], [89.8, 2708.0], [89.9, 2708.0], [90.0, 2713.0], [90.1, 2713.0], [90.2, 2713.0], [90.3, 2713.0], [90.4, 2730.0], [90.5, 2731.0], [90.6, 2731.0], [90.7, 2738.0], [90.8, 2738.0], [90.9, 2748.0], [91.0, 2749.0], [91.1, 2749.0], [91.2, 2749.0], [91.3, 2749.0], [91.4, 2760.0], [91.5, 2778.0], [91.6, 2778.0], [91.7, 2789.0], [91.8, 2789.0], [91.9, 2798.0], [92.0, 2798.0], [92.1, 2798.0], [92.2, 2802.0], [92.3, 2802.0], [92.4, 2809.0], [92.5, 2819.0], [92.6, 2819.0], [92.7, 2826.0], [92.8, 2826.0], [92.9, 2836.0], [93.0, 2855.0], [93.1, 2855.0], [93.2, 2885.0], [93.3, 2885.0], [93.4, 2895.0], [93.5, 2919.0], [93.6, 2919.0], [93.7, 2928.0], [93.8, 2928.0], [93.9, 2934.0], [94.0, 2940.0], [94.1, 2940.0], [94.2, 2949.0], [94.3, 2949.0], [94.4, 2952.0], [94.5, 2963.0], [94.6, 2963.0], [94.7, 2980.0], [94.8, 2980.0], [94.9, 2988.0], [95.0, 3002.0], [95.1, 3002.0], [95.2, 3004.0], [95.3, 3004.0], [95.4, 3038.0], [95.5, 3056.0], [95.6, 3056.0], [95.7, 3088.0], [95.8, 3088.0], [95.9, 3099.0], [96.0, 3123.0], [96.1, 3123.0], [96.2, 3134.0], [96.3, 3134.0], [96.4, 3137.0], [96.5, 3203.0], [96.6, 3203.0], [96.7, 3230.0], [96.8, 3230.0], [96.9, 3269.0], [97.0, 3280.0], [97.1, 3280.0], [97.2, 3312.0], [97.3, 3312.0], [97.4, 3347.0], [97.5, 3414.0], [97.6, 3414.0], [97.7, 3488.0], [97.8, 3488.0], [97.9, 3523.0], [98.0, 3949.0], [98.1, 3949.0], [98.2, 4016.0], [98.3, 4016.0], [98.4, 4163.0], [98.5, 4259.0], [98.6, 4259.0], [98.7, 4283.0], [98.8, 4283.0], [98.9, 4461.0], [99.0, 4775.0], [99.1, 4775.0], [99.2, 5239.0], [99.3, 5239.0], [99.4, 5410.0], [99.5, 5860.0], [99.6, 5860.0], [99.7, 6089.0], [99.8, 6089.0], [99.9, 13506.0], [100.0, 13506.0]], "isOverall": false, "label": "Beauty_1_Page", "isController": false}, {"data": [[0.0, 1071.0], [0.1, 1071.0], [0.2, 1074.0], [0.3, 1074.0], [0.4, 1095.0], [0.5, 1095.0], [0.6, 1099.0], [0.7, 1109.0], [0.8, 1109.0], [0.9, 1120.0], [1.0, 1120.0], [1.1, 1124.0], [1.2, 1130.0], [1.3, 1130.0], [1.4, 1132.0], [1.5, 1132.0], [1.6, 1132.0], [1.7, 1134.0], [1.8, 1134.0], [1.9, 1135.0], [2.0, 1135.0], [2.1, 1141.0], [2.2, 1143.0], [2.3, 1143.0], [2.4, 1154.0], [2.5, 1154.0], [2.6, 1157.0], [2.7, 1161.0], [2.8, 1161.0], [2.9, 1161.0], [3.0, 1161.0], [3.1, 1162.0], [3.2, 1163.0], [3.3, 1163.0], [3.4, 1165.0], [3.5, 1165.0], [3.6, 1165.0], [3.7, 1170.0], [3.8, 1170.0], [3.9, 1171.0], [4.0, 1171.0], [4.1, 1171.0], [4.2, 1174.0], [4.3, 1174.0], [4.4, 1175.0], [4.5, 1175.0], [4.6, 1176.0], [4.7, 1187.0], [4.8, 1187.0], [4.9, 1193.0], [5.0, 1193.0], [5.1, 1198.0], [5.2, 1199.0], [5.3, 1199.0], [5.4, 1201.0], [5.5, 1201.0], [5.6, 1205.0], [5.7, 1208.0], [5.8, 1208.0], [5.9, 1209.0], [6.0, 1209.0], [6.1, 1213.0], [6.2, 1217.0], [6.3, 1217.0], [6.4, 1220.0], [6.5, 1220.0], [6.6, 1222.0], [6.7, 1222.0], [6.8, 1222.0], [6.9, 1227.0], [7.0, 1227.0], [7.1, 1228.0], [7.2, 1230.0], [7.3, 1230.0], [7.4, 1232.0], [7.5, 1232.0], [7.6, 1233.0], [7.7, 1236.0], [7.8, 1236.0], [7.9, 1237.0], [8.0, 1237.0], [8.1, 1238.0], [8.2, 1239.0], [8.3, 1239.0], [8.4, 1240.0], [8.5, 1240.0], [8.6, 1241.0], [8.7, 1241.0], [8.8, 1241.0], [8.9, 1243.0], [9.0, 1243.0], [9.1, 1243.0], [9.2, 1243.0], [9.3, 1243.0], [9.4, 1247.0], [9.5, 1247.0], [9.6, 1248.0], [9.7, 1250.0], [9.8, 1250.0], [9.9, 1251.0], [10.0, 1251.0], [10.1, 1252.0], [10.2, 1252.0], [10.3, 1252.0], [10.4, 1254.0], [10.5, 1254.0], [10.6, 1254.0], [10.7, 1254.0], [10.8, 1256.0], [10.9, 1257.0], [11.0, 1257.0], [11.1, 1257.0], [11.2, 1257.0], [11.3, 1259.0], [11.4, 1262.0], [11.5, 1262.0], [11.6, 1263.0], [11.7, 1263.0], [11.8, 1265.0], [11.9, 1265.0], [12.0, 1265.0], [12.1, 1265.0], [12.2, 1265.0], [12.3, 1265.0], [12.4, 1266.0], [12.5, 1266.0], [12.6, 1268.0], [12.7, 1268.0], [12.8, 1269.0], [12.9, 1271.0], [13.0, 1271.0], [13.1, 1273.0], [13.2, 1273.0], [13.3, 1274.0], [13.4, 1274.0], [13.5, 1274.0], [13.6, 1275.0], [13.7, 1275.0], [13.8, 1279.0], [13.9, 1280.0], [14.0, 1280.0], [14.1, 1281.0], [14.2, 1281.0], [14.3, 1282.0], [14.4, 1282.0], [14.5, 1282.0], [14.6, 1283.0], [14.7, 1283.0], [14.8, 1283.0], [14.9, 1285.0], [15.0, 1285.0], [15.1, 1285.0], [15.2, 1285.0], [15.3, 1285.0], [15.4, 1286.0], [15.5, 1286.0], [15.6, 1287.0], [15.7, 1287.0], [15.8, 1288.0], [15.9, 1289.0], [16.0, 1289.0], [16.1, 1290.0], [16.2, 1290.0], [16.3, 1291.0], [16.4, 1292.0], [16.5, 1292.0], [16.6, 1293.0], [16.7, 1293.0], [16.8, 1294.0], [16.9, 1294.0], [17.0, 1294.0], [17.1, 1296.0], [17.2, 1296.0], [17.3, 1298.0], [17.4, 1303.0], [17.5, 1303.0], [17.6, 1303.0], [17.7, 1303.0], [17.8, 1304.0], [17.9, 1306.0], [18.0, 1306.0], [18.1, 1307.0], [18.2, 1307.0], [18.3, 1308.0], [18.4, 1309.0], [18.5, 1309.0], [18.6, 1309.0], [18.7, 1309.0], [18.8, 1310.0], [18.9, 1311.0], [19.0, 1311.0], [19.1, 1311.0], [19.2, 1311.0], [19.3, 1312.0], [19.4, 1312.0], [19.5, 1312.0], [19.6, 1313.0], [19.7, 1313.0], [19.8, 1316.0], [19.9, 1316.0], [20.0, 1316.0], [20.1, 1318.0], [20.2, 1318.0], [20.3, 1318.0], [20.4, 1318.0], [20.5, 1320.0], [20.6, 1321.0], [20.7, 1321.0], [20.8, 1321.0], [20.9, 1321.0], [21.0, 1321.0], [21.1, 1324.0], [21.2, 1324.0], [21.3, 1324.0], [21.4, 1324.0], [21.5, 1325.0], [21.6, 1326.0], [21.7, 1326.0], [21.8, 1327.0], [21.9, 1327.0], [22.0, 1327.0], [22.1, 1327.0], [22.2, 1327.0], [22.3, 1327.0], [22.4, 1327.0], [22.5, 1327.0], [22.6, 1331.0], [22.7, 1331.0], [22.8, 1331.0], [22.9, 1331.0], [23.0, 1332.0], [23.1, 1333.0], [23.2, 1333.0], [23.3, 1333.0], [23.4, 1333.0], [23.5, 1335.0], [23.6, 1336.0], [23.7, 1336.0], [23.8, 1336.0], [23.9, 1336.0], [24.0, 1337.0], [24.1, 1337.0], [24.2, 1337.0], [24.3, 1339.0], [24.4, 1339.0], [24.5, 1339.0], [24.6, 1341.0], [24.7, 1341.0], [24.8, 1342.0], [24.9, 1342.0], [25.0, 1343.0], [25.1, 1347.0], [25.2, 1347.0], [25.3, 1348.0], [25.4, 1348.0], [25.5, 1349.0], [25.6, 1349.0], [25.7, 1349.0], [25.8, 1350.0], [25.9, 1350.0], [26.0, 1350.0], [26.1, 1352.0], [26.2, 1352.0], [26.3, 1353.0], [26.4, 1353.0], [26.5, 1356.0], [26.6, 1356.0], [26.7, 1356.0], [26.8, 1357.0], [26.9, 1357.0], [27.0, 1359.0], [27.1, 1359.0], [27.2, 1359.0], [27.3, 1360.0], [27.4, 1360.0], [27.5, 1361.0], [27.6, 1362.0], [27.7, 1362.0], [27.8, 1363.0], [27.9, 1363.0], [28.0, 1365.0], [28.1, 1366.0], [28.2, 1366.0], [28.3, 1367.0], [28.4, 1367.0], [28.5, 1372.0], [28.6, 1374.0], [28.7, 1374.0], [28.8, 1375.0], [28.9, 1375.0], [29.0, 1377.0], [29.1, 1381.0], [29.2, 1381.0], [29.3, 1381.0], [29.4, 1381.0], [29.5, 1381.0], [29.6, 1383.0], [29.7, 1383.0], [29.8, 1387.0], [29.9, 1387.0], [30.0, 1387.0], [30.1, 1387.0], [30.2, 1387.0], [30.3, 1389.0], [30.4, 1389.0], [30.5, 1390.0], [30.6, 1390.0], [30.7, 1390.0], [30.8, 1393.0], [30.9, 1393.0], [31.0, 1393.0], [31.1, 1393.0], [31.2, 1394.0], [31.3, 1397.0], [31.4, 1397.0], [31.5, 1397.0], [31.6, 1397.0], [31.7, 1399.0], [31.8, 1399.0], [31.9, 1399.0], [32.0, 1401.0], [32.1, 1401.0], [32.2, 1402.0], [32.3, 1404.0], [32.4, 1404.0], [32.5, 1405.0], [32.6, 1405.0], [32.7, 1407.0], [32.8, 1407.0], [32.9, 1407.0], [33.0, 1408.0], [33.1, 1408.0], [33.2, 1408.0], [33.3, 1409.0], [33.4, 1409.0], [33.5, 1414.0], [33.6, 1414.0], [33.7, 1414.0], [33.8, 1414.0], [33.9, 1414.0], [34.0, 1415.0], [34.1, 1415.0], [34.2, 1416.0], [34.3, 1416.0], [34.4, 1416.0], [34.5, 1418.0], [34.6, 1418.0], [34.7, 1419.0], [34.8, 1420.0], [34.9, 1420.0], [35.0, 1420.0], [35.1, 1420.0], [35.2, 1421.0], [35.3, 1424.0], [35.4, 1424.0], [35.5, 1424.0], [35.6, 1424.0], [35.7, 1426.0], [35.8, 1426.0], [35.9, 1426.0], [36.0, 1427.0], [36.1, 1427.0], [36.2, 1428.0], [36.3, 1429.0], [36.4, 1429.0], [36.5, 1429.0], [36.6, 1429.0], [36.7, 1429.0], [36.8, 1433.0], [36.9, 1433.0], [37.0, 1433.0], [37.1, 1433.0], [37.2, 1434.0], [37.3, 1434.0], [37.4, 1434.0], [37.5, 1434.0], [37.6, 1434.0], [37.7, 1435.0], [37.8, 1436.0], [37.9, 1436.0], [38.0, 1437.0], [38.1, 1437.0], [38.2, 1437.0], [38.3, 1438.0], [38.4, 1438.0], [38.5, 1440.0], [38.6, 1440.0], [38.7, 1440.0], [38.8, 1442.0], [38.9, 1442.0], [39.0, 1443.0], [39.1, 1443.0], [39.2, 1448.0], [39.3, 1448.0], [39.4, 1448.0], [39.5, 1448.0], [39.6, 1448.0], [39.7, 1449.0], [39.8, 1449.0], [39.9, 1449.0], [40.0, 1452.0], [40.1, 1452.0], [40.2, 1453.0], [40.3, 1453.0], [40.4, 1453.0], [40.5, 1454.0], [40.6, 1454.0], [40.7, 1456.0], [40.8, 1456.0], [40.9, 1457.0], [41.0, 1458.0], [41.1, 1458.0], [41.2, 1458.0], [41.3, 1458.0], [41.4, 1459.0], [41.5, 1460.0], [41.6, 1460.0], [41.7, 1461.0], [41.8, 1461.0], [41.9, 1461.0], [42.0, 1462.0], [42.1, 1462.0], [42.2, 1462.0], [42.3, 1462.0], [42.4, 1463.0], [42.5, 1464.0], [42.6, 1464.0], [42.7, 1464.0], [42.8, 1464.0], [42.9, 1465.0], [43.0, 1465.0], [43.1, 1465.0], [43.2, 1467.0], [43.3, 1467.0], [43.4, 1469.0], [43.5, 1470.0], [43.6, 1470.0], [43.7, 1470.0], [43.8, 1470.0], [43.9, 1471.0], [44.0, 1471.0], [44.1, 1471.0], [44.2, 1472.0], [44.3, 1472.0], [44.4, 1474.0], [44.5, 1474.0], [44.6, 1474.0], [44.7, 1475.0], [44.8, 1475.0], [44.9, 1475.0], [45.0, 1475.0], [45.1, 1475.0], [45.2, 1475.0], [45.3, 1475.0], [45.4, 1477.0], [45.5, 1478.0], [45.6, 1478.0], [45.7, 1481.0], [45.8, 1481.0], [45.9, 1482.0], [46.0, 1483.0], [46.1, 1483.0], [46.2, 1484.0], [46.3, 1484.0], [46.4, 1484.0], [46.5, 1484.0], [46.6, 1484.0], [46.7, 1484.0], [46.8, 1484.0], [46.9, 1486.0], [47.0, 1487.0], [47.1, 1487.0], [47.2, 1487.0], [47.3, 1487.0], [47.4, 1490.0], [47.5, 1490.0], [47.6, 1490.0], [47.7, 1490.0], [47.8, 1490.0], [47.9, 1491.0], [48.0, 1495.0], [48.1, 1495.0], [48.2, 1496.0], [48.3, 1496.0], [48.4, 1497.0], [48.5, 1497.0], [48.6, 1497.0], [48.7, 1498.0], [48.8, 1498.0], [48.9, 1499.0], [49.0, 1499.0], [49.1, 1499.0], [49.2, 1501.0], [49.3, 1501.0], [49.4, 1501.0], [49.5, 1502.0], [49.6, 1502.0], [49.7, 1502.0], [49.8, 1502.0], [49.9, 1502.0], [50.0, 1502.0], [50.1, 1503.0], [50.2, 1504.0], [50.3, 1504.0], [50.4, 1505.0], [50.5, 1505.0], [50.6, 1506.0], [50.7, 1509.0], [50.8, 1509.0], [50.9, 1511.0], [51.0, 1511.0], [51.1, 1514.0], [51.2, 1514.0], [51.3, 1514.0], [51.4, 1515.0], [51.5, 1515.0], [51.6, 1515.0], [51.7, 1516.0], [51.8, 1516.0], [51.9, 1522.0], [52.0, 1522.0], [52.1, 1523.0], [52.2, 1524.0], [52.3, 1524.0], [52.4, 1525.0], [52.5, 1525.0], [52.6, 1525.0], [52.7, 1526.0], [52.8, 1526.0], [52.9, 1528.0], [53.0, 1528.0], [53.1, 1529.0], [53.2, 1533.0], [53.3, 1533.0], [53.4, 1534.0], [53.5, 1534.0], [53.6, 1538.0], [53.7, 1538.0], [53.8, 1538.0], [53.9, 1540.0], [54.0, 1540.0], [54.1, 1542.0], [54.2, 1544.0], [54.3, 1544.0], [54.4, 1544.0], [54.5, 1544.0], [54.6, 1545.0], [54.7, 1546.0], [54.8, 1546.0], [54.9, 1546.0], [55.0, 1546.0], [55.1, 1546.0], [55.2, 1547.0], [55.3, 1547.0], [55.4, 1547.0], [55.5, 1547.0], [55.6, 1547.0], [55.7, 1552.0], [55.8, 1552.0], [55.9, 1552.0], [56.0, 1552.0], [56.1, 1552.0], [56.2, 1554.0], [56.3, 1554.0], [56.4, 1559.0], [56.5, 1559.0], [56.6, 1560.0], [56.7, 1561.0], [56.8, 1561.0], [56.9, 1562.0], [57.0, 1562.0], [57.1, 1563.0], [57.2, 1563.0], [57.3, 1563.0], [57.4, 1565.0], [57.5, 1565.0], [57.6, 1566.0], [57.7, 1567.0], [57.8, 1567.0], [57.9, 1568.0], [58.0, 1568.0], [58.1, 1568.0], [58.2, 1571.0], [58.3, 1571.0], [58.4, 1573.0], [58.5, 1573.0], [58.6, 1574.0], [58.7, 1577.0], [58.8, 1577.0], [58.9, 1577.0], [59.0, 1577.0], [59.1, 1577.0], [59.2, 1579.0], [59.3, 1579.0], [59.4, 1579.0], [59.5, 1579.0], [59.6, 1580.0], [59.7, 1580.0], [59.8, 1580.0], [59.9, 1581.0], [60.0, 1581.0], [60.1, 1585.0], [60.2, 1585.0], [60.3, 1586.0], [60.4, 1586.0], [60.5, 1586.0], [60.6, 1588.0], [60.7, 1588.0], [60.8, 1591.0], [60.9, 1597.0], [61.0, 1597.0], [61.1, 1606.0], [61.2, 1606.0], [61.3, 1606.0], [61.4, 1607.0], [61.5, 1607.0], [61.6, 1608.0], [61.7, 1608.0], [61.8, 1609.0], [61.9, 1609.0], [62.0, 1609.0], [62.1, 1610.0], [62.2, 1610.0], [62.3, 1612.0], [62.4, 1612.0], [62.5, 1612.0], [62.6, 1614.0], [62.7, 1614.0], [62.8, 1617.0], [62.9, 1617.0], [63.0, 1617.0], [63.1, 1618.0], [63.2, 1618.0], [63.3, 1619.0], [63.4, 1620.0], [63.5, 1620.0], [63.6, 1623.0], [63.7, 1623.0], [63.8, 1626.0], [63.9, 1627.0], [64.0, 1627.0], [64.1, 1627.0], [64.2, 1627.0], [64.3, 1629.0], [64.4, 1630.0], [64.5, 1630.0], [64.6, 1632.0], [64.7, 1632.0], [64.8, 1633.0], [64.9, 1635.0], [65.0, 1635.0], [65.1, 1638.0], [65.2, 1638.0], [65.3, 1640.0], [65.4, 1641.0], [65.5, 1641.0], [65.6, 1642.0], [65.7, 1642.0], [65.8, 1643.0], [65.9, 1644.0], [66.0, 1644.0], [66.1, 1645.0], [66.2, 1645.0], [66.3, 1653.0], [66.4, 1653.0], [66.5, 1653.0], [66.6, 1656.0], [66.7, 1656.0], [66.8, 1656.0], [66.9, 1657.0], [67.0, 1657.0], [67.1, 1657.0], [67.2, 1657.0], [67.3, 1659.0], [67.4, 1662.0], [67.5, 1662.0], [67.6, 1664.0], [67.7, 1664.0], [67.8, 1666.0], [67.9, 1667.0], [68.0, 1667.0], [68.1, 1668.0], [68.2, 1668.0], [68.3, 1672.0], [68.4, 1672.0], [68.5, 1672.0], [68.6, 1674.0], [68.7, 1674.0], [68.8, 1679.0], [68.9, 1679.0], [69.0, 1679.0], [69.1, 1680.0], [69.2, 1680.0], [69.3, 1680.0], [69.4, 1681.0], [69.5, 1681.0], [69.6, 1684.0], [69.7, 1684.0], [69.8, 1685.0], [69.9, 1686.0], [70.0, 1686.0], [70.1, 1690.0], [70.2, 1690.0], [70.3, 1693.0], [70.4, 1693.0], [70.5, 1694.0], [70.6, 1695.0], [70.7, 1695.0], [70.8, 1696.0], [70.9, 1696.0], [71.0, 1699.0], [71.1, 1700.0], [71.2, 1700.0], [71.3, 1701.0], [71.4, 1701.0], [71.5, 1702.0], [71.6, 1704.0], [71.7, 1704.0], [71.8, 1704.0], [71.9, 1704.0], [72.0, 1708.0], [72.1, 1712.0], [72.2, 1712.0], [72.3, 1712.0], [72.4, 1712.0], [72.5, 1715.0], [72.6, 1716.0], [72.7, 1716.0], [72.8, 1722.0], [72.9, 1722.0], [73.0, 1723.0], [73.1, 1726.0], [73.2, 1726.0], [73.3, 1728.0], [73.4, 1728.0], [73.5, 1732.0], [73.6, 1743.0], [73.7, 1743.0], [73.8, 1747.0], [73.9, 1747.0], [74.0, 1752.0], [74.1, 1756.0], [74.2, 1756.0], [74.3, 1760.0], [74.4, 1760.0], [74.5, 1762.0], [74.6, 1763.0], [74.7, 1763.0], [74.8, 1767.0], [74.9, 1767.0], [75.0, 1768.0], [75.1, 1769.0], [75.2, 1769.0], [75.3, 1774.0], [75.4, 1774.0], [75.5, 1775.0], [75.6, 1776.0], [75.7, 1776.0], [75.8, 1777.0], [75.9, 1777.0], [76.0, 1778.0], [76.1, 1779.0], [76.2, 1779.0], [76.3, 1786.0], [76.4, 1786.0], [76.5, 1797.0], [76.6, 1797.0], [76.7, 1797.0], [76.8, 1799.0], [76.9, 1799.0], [77.0, 1799.0], [77.1, 1801.0], [77.2, 1801.0], [77.3, 1801.0], [77.4, 1801.0], [77.5, 1801.0], [77.6, 1804.0], [77.7, 1804.0], [77.8, 1807.0], [77.9, 1807.0], [78.0, 1807.0], [78.1, 1808.0], [78.2, 1808.0], [78.3, 1813.0], [78.4, 1813.0], [78.5, 1815.0], [78.6, 1821.0], [78.7, 1821.0], [78.8, 1821.0], [78.9, 1821.0], [79.0, 1828.0], [79.1, 1836.0], [79.2, 1836.0], [79.3, 1837.0], [79.4, 1837.0], [79.5, 1840.0], [79.6, 1847.0], [79.7, 1847.0], [79.8, 1853.0], [79.9, 1853.0], [80.0, 1853.0], [80.1, 1853.0], [80.2, 1856.0], [80.3, 1856.0], [80.4, 1856.0], [80.5, 1857.0], [80.6, 1857.0], [80.7, 1864.0], [80.8, 1865.0], [80.9, 1865.0], [81.0, 1866.0], [81.1, 1866.0], [81.2, 1867.0], [81.3, 1869.0], [81.4, 1869.0], [81.5, 1871.0], [81.6, 1871.0], [81.7, 1875.0], [81.8, 1877.0], [81.9, 1877.0], [82.0, 1883.0], [82.1, 1883.0], [82.2, 1883.0], [82.3, 1884.0], [82.4, 1884.0], [82.5, 1886.0], [82.6, 1886.0], [82.7, 1896.0], [82.8, 1896.0], [82.9, 1896.0], [83.0, 1908.0], [83.1, 1908.0], [83.2, 1909.0], [83.3, 1910.0], [83.4, 1910.0], [83.5, 1912.0], [83.6, 1912.0], [83.7, 1913.0], [83.8, 1921.0], [83.9, 1921.0], [84.0, 1924.0], [84.1, 1924.0], [84.2, 1935.0], [84.3, 1940.0], [84.4, 1940.0], [84.5, 1942.0], [84.6, 1942.0], [84.7, 1959.0], [84.8, 1959.0], [84.9, 1959.0], [85.0, 1961.0], [85.1, 1961.0], [85.2, 1967.0], [85.3, 1968.0], [85.4, 1968.0], [85.5, 1972.0], [85.6, 1972.0], [85.7, 1978.0], [85.8, 1979.0], [85.9, 1979.0], [86.0, 1980.0], [86.1, 1980.0], [86.2, 1991.0], [86.3, 1993.0], [86.4, 1993.0], [86.5, 2000.0], [86.6, 2000.0], [86.7, 2011.0], [86.8, 2016.0], [86.9, 2016.0], [87.0, 2017.0], [87.1, 2017.0], [87.2, 2020.0], [87.3, 2022.0], [87.4, 2022.0], [87.5, 2033.0], [87.6, 2033.0], [87.7, 2037.0], [87.8, 2044.0], [87.9, 2044.0], [88.0, 2054.0], [88.1, 2054.0], [88.2, 2056.0], [88.3, 2056.0], [88.4, 2056.0], [88.5, 2074.0], [88.6, 2074.0], [88.7, 2085.0], [88.8, 2086.0], [88.9, 2086.0], [89.0, 2090.0], [89.1, 2090.0], [89.2, 2097.0], [89.3, 2106.0], [89.4, 2106.0], [89.5, 2108.0], [89.6, 2108.0], [89.7, 2128.0], [89.8, 2133.0], [89.9, 2133.0], [90.0, 2135.0], [90.1, 2135.0], [90.2, 2135.0], [90.3, 2135.0], [90.4, 2148.0], [90.5, 2148.0], [90.6, 2148.0], [90.7, 2153.0], [90.8, 2153.0], [90.9, 2156.0], [91.0, 2156.0], [91.1, 2156.0], [91.2, 2165.0], [91.3, 2165.0], [91.4, 2171.0], [91.5, 2174.0], [91.6, 2174.0], [91.7, 2179.0], [91.8, 2179.0], [91.9, 2183.0], [92.0, 2185.0], [92.1, 2185.0], [92.2, 2185.0], [92.3, 2185.0], [92.4, 2187.0], [92.5, 2189.0], [92.6, 2189.0], [92.7, 2195.0], [92.8, 2195.0], [92.9, 2205.0], [93.0, 2217.0], [93.1, 2217.0], [93.2, 2217.0], [93.3, 2217.0], [93.4, 2246.0], [93.5, 2249.0], [93.6, 2249.0], [93.7, 2266.0], [93.8, 2266.0], [93.9, 2269.0], [94.0, 2274.0], [94.1, 2274.0], [94.2, 2286.0], [94.3, 2286.0], [94.4, 2294.0], [94.5, 2310.0], [94.6, 2310.0], [94.7, 2318.0], [94.8, 2318.0], [94.9, 2321.0], [95.0, 2358.0], [95.1, 2358.0], [95.2, 2361.0], [95.3, 2361.0], [95.4, 2365.0], [95.5, 2371.0], [95.6, 2371.0], [95.7, 2381.0], [95.8, 2381.0], [95.9, 2401.0], [96.0, 2419.0], [96.1, 2419.0], [96.2, 2439.0], [96.3, 2439.0], [96.4, 2463.0], [96.5, 2514.0], [96.6, 2514.0], [96.7, 2550.0], [96.8, 2550.0], [96.9, 2575.0], [97.0, 2652.0], [97.1, 2652.0], [97.2, 2655.0], [97.3, 2655.0], [97.4, 2670.0], [97.5, 2701.0], [97.6, 2701.0], [97.7, 2715.0], [97.8, 2715.0], [97.9, 2757.0], [98.0, 2795.0], [98.1, 2795.0], [98.2, 2796.0], [98.3, 2796.0], [98.4, 2822.0], [98.5, 2924.0], [98.6, 2924.0], [98.7, 3318.0], [98.8, 3318.0], [98.9, 3344.0], [99.0, 3390.0], [99.1, 3390.0], [99.2, 3715.0], [99.3, 3715.0], [99.4, 4219.0], [99.5, 4381.0], [99.6, 4381.0], [99.7, 4941.0], [99.8, 4941.0], [99.9, 4995.0], [100.0, 4995.0]], "isOverall": false, "label": "Expert_Page", "isController": false}, {"data": [[0.0, 1349.0], [0.1, 1349.0], [0.2, 1394.0], [0.3, 1394.0], [0.4, 1412.0], [0.5, 1412.0], [0.6, 1444.0], [0.7, 1457.0], [0.8, 1457.0], [0.9, 1468.0], [1.0, 1468.0], [1.1, 1474.0], [1.2, 1478.0], [1.3, 1478.0], [1.4, 1484.0], [1.5, 1484.0], [1.6, 1489.0], [1.7, 1493.0], [1.8, 1493.0], [1.9, 1497.0], [2.0, 1497.0], [2.1, 1503.0], [2.2, 1506.0], [2.3, 1506.0], [2.4, 1514.0], [2.5, 1514.0], [2.6, 1516.0], [2.7, 1519.0], [2.8, 1519.0], [2.9, 1520.0], [3.0, 1520.0], [3.1, 1523.0], [3.2, 1542.0], [3.3, 1542.0], [3.4, 1545.0], [3.5, 1545.0], [3.6, 1545.0], [3.7, 1547.0], [3.8, 1547.0], [3.9, 1553.0], [4.0, 1553.0], [4.1, 1554.0], [4.2, 1556.0], [4.3, 1556.0], [4.4, 1558.0], [4.5, 1558.0], [4.6, 1562.0], [4.7, 1567.0], [4.8, 1567.0], [4.9, 1572.0], [5.0, 1572.0], [5.1, 1573.0], [5.2, 1579.0], [5.3, 1579.0], [5.4, 1581.0], [5.5, 1581.0], [5.6, 1582.0], [5.7, 1583.0], [5.8, 1583.0], [5.9, 1591.0], [6.0, 1591.0], [6.1, 1593.0], [6.2, 1593.0], [6.3, 1593.0], [6.4, 1596.0], [6.5, 1596.0], [6.6, 1597.0], [6.7, 1598.0], [6.8, 1598.0], [6.9, 1599.0], [7.0, 1599.0], [7.1, 1604.0], [7.2, 1604.0], [7.3, 1604.0], [7.4, 1606.0], [7.5, 1606.0], [7.6, 1615.0], [7.7, 1615.0], [7.8, 1615.0], [7.9, 1619.0], [8.0, 1619.0], [8.1, 1623.0], [8.2, 1625.0], [8.3, 1625.0], [8.4, 1626.0], [8.5, 1626.0], [8.6, 1627.0], [8.7, 1627.0], [8.8, 1627.0], [8.9, 1628.0], [9.0, 1628.0], [9.1, 1632.0], [9.2, 1634.0], [9.3, 1634.0], [9.4, 1635.0], [9.5, 1635.0], [9.6, 1635.0], [9.7, 1635.0], [9.8, 1635.0], [9.9, 1637.0], [10.0, 1637.0], [10.1, 1644.0], [10.2, 1647.0], [10.3, 1647.0], [10.4, 1648.0], [10.5, 1648.0], [10.6, 1649.0], [10.7, 1650.0], [10.8, 1650.0], [10.9, 1650.0], [11.0, 1650.0], [11.1, 1652.0], [11.2, 1656.0], [11.3, 1656.0], [11.4, 1657.0], [11.5, 1657.0], [11.6, 1657.0], [11.7, 1658.0], [11.8, 1658.0], [11.9, 1659.0], [12.0, 1659.0], [12.1, 1660.0], [12.2, 1662.0], [12.3, 1662.0], [12.4, 1663.0], [12.5, 1663.0], [12.6, 1665.0], [12.7, 1669.0], [12.8, 1669.0], [12.9, 1670.0], [13.0, 1670.0], [13.1, 1670.0], [13.2, 1673.0], [13.3, 1673.0], [13.4, 1674.0], [13.5, 1674.0], [13.6, 1676.0], [13.7, 1676.0], [13.8, 1676.0], [13.9, 1678.0], [14.0, 1678.0], [14.1, 1678.0], [14.2, 1680.0], [14.3, 1680.0], [14.4, 1682.0], [14.5, 1682.0], [14.6, 1685.0], [14.7, 1686.0], [14.8, 1686.0], [14.9, 1689.0], [15.0, 1689.0], [15.1, 1689.0], [15.2, 1690.0], [15.3, 1690.0], [15.4, 1691.0], [15.5, 1691.0], [15.6, 1693.0], [15.7, 1693.0], [15.8, 1693.0], [15.9, 1694.0], [16.0, 1694.0], [16.1, 1698.0], [16.2, 1698.0], [16.3, 1698.0], [16.4, 1701.0], [16.5, 1701.0], [16.6, 1702.0], [16.7, 1702.0], [16.8, 1702.0], [16.9, 1703.0], [17.0, 1703.0], [17.1, 1705.0], [17.2, 1706.0], [17.3, 1706.0], [17.4, 1707.0], [17.5, 1707.0], [17.6, 1707.0], [17.7, 1708.0], [17.8, 1708.0], [17.9, 1709.0], [18.0, 1709.0], [18.1, 1709.0], [18.2, 1709.0], [18.3, 1709.0], [18.4, 1714.0], [18.5, 1714.0], [18.6, 1714.0], [18.7, 1714.0], [18.8, 1714.0], [18.9, 1717.0], [19.0, 1717.0], [19.1, 1717.0], [19.2, 1721.0], [19.3, 1721.0], [19.4, 1721.0], [19.5, 1721.0], [19.6, 1721.0], [19.7, 1722.0], [19.8, 1722.0], [19.9, 1725.0], [20.0, 1725.0], [20.1, 1726.0], [20.2, 1726.0], [20.3, 1727.0], [20.4, 1728.0], [20.5, 1728.0], [20.6, 1730.0], [20.7, 1730.0], [20.8, 1730.0], [20.9, 1732.0], [21.0, 1732.0], [21.1, 1732.0], [21.2, 1732.0], [21.3, 1732.0], [21.4, 1734.0], [21.5, 1734.0], [21.6, 1739.0], [21.7, 1739.0], [21.8, 1740.0], [21.9, 1740.0], [22.0, 1740.0], [22.1, 1740.0], [22.2, 1740.0], [22.3, 1740.0], [22.4, 1741.0], [22.5, 1741.0], [22.6, 1742.0], [22.7, 1742.0], [22.8, 1745.0], [22.9, 1748.0], [23.0, 1748.0], [23.1, 1753.0], [23.2, 1753.0], [23.3, 1754.0], [23.4, 1754.0], [23.5, 1754.0], [23.6, 1754.0], [23.7, 1754.0], [23.8, 1755.0], [23.9, 1755.0], [24.0, 1755.0], [24.1, 1756.0], [24.2, 1756.0], [24.3, 1757.0], [24.4, 1758.0], [24.5, 1758.0], [24.6, 1759.0], [24.7, 1759.0], [24.8, 1759.0], [24.9, 1760.0], [25.0, 1760.0], [25.1, 1760.0], [25.2, 1760.0], [25.3, 1761.0], [25.4, 1761.0], [25.5, 1761.0], [25.6, 1765.0], [25.7, 1765.0], [25.8, 1765.0], [25.9, 1765.0], [26.0, 1765.0], [26.1, 1770.0], [26.2, 1770.0], [26.3, 1773.0], [26.4, 1774.0], [26.5, 1774.0], [26.6, 1776.0], [26.7, 1776.0], [26.8, 1776.0], [26.9, 1777.0], [27.0, 1777.0], [27.1, 1778.0], [27.2, 1778.0], [27.3, 1779.0], [27.4, 1782.0], [27.5, 1782.0], [27.6, 1782.0], [27.7, 1782.0], [27.8, 1787.0], [27.9, 1789.0], [28.0, 1789.0], [28.1, 1789.0], [28.2, 1789.0], [28.3, 1791.0], [28.4, 1792.0], [28.5, 1792.0], [28.6, 1792.0], [28.7, 1792.0], [28.8, 1792.0], [28.9, 1792.0], [29.0, 1792.0], [29.1, 1793.0], [29.2, 1793.0], [29.3, 1794.0], [29.4, 1794.0], [29.5, 1794.0], [29.6, 1794.0], [29.7, 1794.0], [29.8, 1795.0], [29.9, 1797.0], [30.0, 1797.0], [30.1, 1798.0], [30.2, 1798.0], [30.3, 1799.0], [30.4, 1801.0], [30.5, 1801.0], [30.6, 1803.0], [30.7, 1803.0], [30.8, 1804.0], [30.9, 1806.0], [31.0, 1806.0], [31.1, 1807.0], [31.2, 1807.0], [31.3, 1808.0], [31.4, 1809.0], [31.5, 1809.0], [31.6, 1810.0], [31.7, 1810.0], [31.8, 1812.0], [31.9, 1813.0], [32.0, 1813.0], [32.1, 1813.0], [32.2, 1813.0], [32.3, 1818.0], [32.4, 1819.0], [32.5, 1819.0], [32.6, 1821.0], [32.7, 1821.0], [32.8, 1825.0], [32.9, 1825.0], [33.0, 1825.0], [33.1, 1825.0], [33.2, 1825.0], [33.3, 1829.0], [33.4, 1829.0], [33.5, 1829.0], [33.6, 1830.0], [33.7, 1830.0], [33.8, 1832.0], [33.9, 1833.0], [34.0, 1833.0], [34.1, 1834.0], [34.2, 1834.0], [34.3, 1834.0], [34.4, 1841.0], [34.5, 1841.0], [34.6, 1842.0], [34.7, 1842.0], [34.8, 1844.0], [34.9, 1848.0], [35.0, 1848.0], [35.1, 1848.0], [35.2, 1848.0], [35.3, 1852.0], [35.4, 1852.0], [35.5, 1852.0], [35.6, 1853.0], [35.7, 1853.0], [35.8, 1855.0], [35.9, 1856.0], [36.0, 1856.0], [36.1, 1857.0], [36.2, 1857.0], [36.3, 1858.0], [36.4, 1858.0], [36.5, 1858.0], [36.6, 1861.0], [36.7, 1861.0], [36.8, 1862.0], [36.9, 1863.0], [37.0, 1863.0], [37.1, 1863.0], [37.2, 1863.0], [37.3, 1863.0], [37.4, 1865.0], [37.5, 1865.0], [37.6, 1867.0], [37.7, 1867.0], [37.8, 1868.0], [37.9, 1870.0], [38.0, 1870.0], [38.1, 1870.0], [38.2, 1870.0], [38.3, 1874.0], [38.4, 1875.0], [38.5, 1875.0], [38.6, 1876.0], [38.7, 1876.0], [38.8, 1877.0], [38.9, 1878.0], [39.0, 1878.0], [39.1, 1880.0], [39.2, 1880.0], [39.3, 1881.0], [39.4, 1881.0], [39.5, 1881.0], [39.6, 1882.0], [39.7, 1882.0], [39.8, 1883.0], [39.9, 1885.0], [40.0, 1885.0], [40.1, 1886.0], [40.2, 1886.0], [40.3, 1890.0], [40.4, 1890.0], [40.5, 1892.0], [40.6, 1892.0], [40.7, 1892.0], [40.8, 1896.0], [40.9, 1896.0], [41.0, 1898.0], [41.1, 1900.0], [41.2, 1900.0], [41.3, 1901.0], [41.4, 1901.0], [41.5, 1901.0], [41.6, 1901.0], [41.7, 1901.0], [41.8, 1906.0], [41.9, 1906.0], [42.0, 1906.0], [42.1, 1908.0], [42.2, 1908.0], [42.3, 1909.0], [42.4, 1909.0], [42.5, 1911.0], [42.6, 1911.0], [42.7, 1911.0], [42.8, 1912.0], [42.9, 1912.0], [43.0, 1912.0], [43.1, 1913.0], [43.2, 1913.0], [43.3, 1914.0], [43.4, 1914.0], [43.5, 1915.0], [43.6, 1920.0], [43.7, 1920.0], [43.8, 1921.0], [43.9, 1921.0], [44.0, 1923.0], [44.1, 1929.0], [44.2, 1929.0], [44.3, 1930.0], [44.4, 1930.0], [44.5, 1931.0], [44.6, 1933.0], [44.7, 1933.0], [44.8, 1934.0], [44.9, 1934.0], [45.0, 1936.0], [45.1, 1936.0], [45.2, 1936.0], [45.3, 1936.0], [45.4, 1936.0], [45.5, 1938.0], [45.6, 1939.0], [45.7, 1939.0], [45.8, 1940.0], [45.9, 1940.0], [46.0, 1944.0], [46.1, 1948.0], [46.2, 1948.0], [46.3, 1950.0], [46.4, 1950.0], [46.5, 1950.0], [46.6, 1952.0], [46.7, 1952.0], [46.8, 1953.0], [46.9, 1953.0], [47.0, 1956.0], [47.1, 1957.0], [47.2, 1957.0], [47.3, 1960.0], [47.4, 1960.0], [47.5, 1960.0], [47.6, 1963.0], [47.7, 1963.0], [47.8, 1964.0], [47.9, 1964.0], [48.0, 1964.0], [48.1, 1965.0], [48.2, 1965.0], [48.3, 1967.0], [48.4, 1967.0], [48.5, 1968.0], [48.6, 1969.0], [48.7, 1969.0], [48.8, 1969.0], [48.9, 1969.0], [49.0, 1970.0], [49.1, 1973.0], [49.2, 1973.0], [49.3, 1974.0], [49.4, 1974.0], [49.5, 1975.0], [49.6, 1976.0], [49.7, 1976.0], [49.8, 1979.0], [49.9, 1979.0], [50.0, 1979.0], [50.1, 1982.0], [50.2, 1982.0], [50.3, 1983.0], [50.4, 1983.0], [50.5, 1983.0], [50.6, 1984.0], [50.7, 1984.0], [50.8, 1984.0], [50.9, 1984.0], [51.0, 1985.0], [51.1, 1987.0], [51.2, 1987.0], [51.3, 1988.0], [51.4, 1988.0], [51.5, 1988.0], [51.6, 1989.0], [51.7, 1989.0], [51.8, 1989.0], [51.9, 1989.0], [52.0, 1991.0], [52.1, 1992.0], [52.2, 1992.0], [52.3, 1995.0], [52.4, 1995.0], [52.5, 1995.0], [52.6, 1997.0], [52.7, 1997.0], [52.8, 2002.0], [52.9, 2002.0], [53.0, 2003.0], [53.1, 2003.0], [53.2, 2003.0], [53.3, 2006.0], [53.4, 2006.0], [53.5, 2006.0], [53.6, 2006.0], [53.7, 2006.0], [53.8, 2008.0], [53.9, 2008.0], [54.0, 2010.0], [54.1, 2010.0], [54.2, 2010.0], [54.3, 2011.0], [54.4, 2011.0], [54.5, 2011.0], [54.6, 2012.0], [54.7, 2012.0], [54.8, 2015.0], [54.9, 2015.0], [55.0, 2025.0], [55.1, 2026.0], [55.2, 2026.0], [55.3, 2026.0], [55.4, 2026.0], [55.5, 2030.0], [55.6, 2031.0], [55.7, 2031.0], [55.8, 2031.0], [55.9, 2031.0], [56.0, 2031.0], [56.1, 2032.0], [56.2, 2032.0], [56.3, 2033.0], [56.4, 2033.0], [56.5, 2037.0], [56.6, 2037.0], [56.7, 2037.0], [56.8, 2039.0], [56.9, 2039.0], [57.0, 2042.0], [57.1, 2043.0], [57.2, 2043.0], [57.3, 2045.0], [57.4, 2045.0], [57.5, 2045.0], [57.6, 2046.0], [57.7, 2046.0], [57.8, 2047.0], [57.9, 2047.0], [58.0, 2049.0], [58.1, 2050.0], [58.2, 2050.0], [58.3, 2053.0], [58.4, 2053.0], [58.5, 2054.0], [58.6, 2058.0], [58.7, 2058.0], [58.8, 2060.0], [58.9, 2060.0], [59.0, 2063.0], [59.1, 2064.0], [59.2, 2064.0], [59.3, 2076.0], [59.4, 2076.0], [59.5, 2078.0], [59.6, 2078.0], [59.7, 2078.0], [59.8, 2079.0], [59.9, 2079.0], [60.0, 2080.0], [60.1, 2080.0], [60.2, 2080.0], [60.3, 2085.0], [60.4, 2085.0], [60.5, 2087.0], [60.6, 2087.0], [60.7, 2087.0], [60.8, 2091.0], [60.9, 2091.0], [61.0, 2094.0], [61.1, 2094.0], [61.2, 2094.0], [61.3, 2094.0], [61.4, 2094.0], [61.5, 2095.0], [61.6, 2095.0], [61.7, 2095.0], [61.8, 2100.0], [61.9, 2100.0], [62.0, 2103.0], [62.1, 2103.0], [62.2, 2109.0], [62.3, 2110.0], [62.4, 2110.0], [62.5, 2111.0], [62.6, 2111.0], [62.7, 2111.0], [62.8, 2114.0], [62.9, 2114.0], [63.0, 2116.0], [63.1, 2116.0], [63.2, 2118.0], [63.3, 2118.0], [63.4, 2118.0], [63.5, 2118.0], [63.6, 2118.0], [63.7, 2119.0], [63.8, 2120.0], [63.9, 2120.0], [64.0, 2131.0], [64.1, 2131.0], [64.2, 2132.0], [64.3, 2138.0], [64.4, 2138.0], [64.5, 2139.0], [64.6, 2139.0], [64.7, 2139.0], [64.8, 2145.0], [64.9, 2145.0], [65.0, 2147.0], [65.1, 2147.0], [65.2, 2152.0], [65.3, 2154.0], [65.4, 2154.0], [65.5, 2157.0], [65.6, 2157.0], [65.7, 2157.0], [65.8, 2166.0], [65.9, 2166.0], [66.0, 2168.0], [66.1, 2168.0], [66.2, 2168.0], [66.3, 2172.0], [66.4, 2172.0], [66.5, 2175.0], [66.6, 2175.0], [66.7, 2176.0], [66.8, 2177.0], [66.9, 2177.0], [67.0, 2177.0], [67.1, 2177.0], [67.2, 2181.0], [67.3, 2181.0], [67.4, 2181.0], [67.5, 2186.0], [67.6, 2186.0], [67.7, 2190.0], [67.8, 2195.0], [67.9, 2195.0], [68.0, 2201.0], [68.1, 2201.0], [68.2, 2202.0], [68.3, 2207.0], [68.4, 2207.0], [68.5, 2212.0], [68.6, 2212.0], [68.7, 2212.0], [68.8, 2214.0], [68.9, 2214.0], [69.0, 2216.0], [69.1, 2216.0], [69.2, 2217.0], [69.3, 2218.0], [69.4, 2218.0], [69.5, 2226.0], [69.6, 2226.0], [69.7, 2227.0], [69.8, 2227.0], [69.9, 2227.0], [70.0, 2228.0], [70.1, 2228.0], [70.2, 2228.0], [70.3, 2228.0], [70.4, 2228.0], [70.5, 2230.0], [70.6, 2230.0], [70.7, 2232.0], [70.8, 2244.0], [70.9, 2244.0], [71.0, 2247.0], [71.1, 2247.0], [71.2, 2250.0], [71.3, 2251.0], [71.4, 2251.0], [71.5, 2251.0], [71.6, 2251.0], [71.7, 2251.0], [71.8, 2253.0], [71.9, 2253.0], [72.0, 2254.0], [72.1, 2254.0], [72.2, 2261.0], [72.3, 2264.0], [72.4, 2264.0], [72.5, 2264.0], [72.6, 2264.0], [72.7, 2266.0], [72.8, 2268.0], [72.9, 2268.0], [73.0, 2278.0], [73.1, 2278.0], [73.2, 2283.0], [73.3, 2288.0], [73.4, 2288.0], [73.5, 2290.0], [73.6, 2290.0], [73.7, 2292.0], [73.8, 2295.0], [73.9, 2295.0], [74.0, 2295.0], [74.1, 2295.0], [74.2, 2296.0], [74.3, 2298.0], [74.4, 2298.0], [74.5, 2311.0], [74.6, 2311.0], [74.7, 2312.0], [74.8, 2320.0], [74.9, 2320.0], [75.0, 2324.0], [75.1, 2324.0], [75.2, 2326.0], [75.3, 2333.0], [75.4, 2333.0], [75.5, 2334.0], [75.6, 2334.0], [75.7, 2334.0], [75.8, 2334.0], [75.9, 2334.0], [76.0, 2339.0], [76.1, 2339.0], [76.2, 2342.0], [76.3, 2343.0], [76.4, 2343.0], [76.5, 2344.0], [76.6, 2344.0], [76.7, 2345.0], [76.8, 2346.0], [76.9, 2346.0], [77.0, 2348.0], [77.1, 2348.0], [77.2, 2348.0], [77.3, 2349.0], [77.4, 2349.0], [77.5, 2350.0], [77.6, 2350.0], [77.7, 2352.0], [77.8, 2359.0], [77.9, 2359.0], [78.0, 2359.0], [78.1, 2359.0], [78.2, 2365.0], [78.3, 2366.0], [78.4, 2366.0], [78.5, 2370.0], [78.6, 2370.0], [78.7, 2372.0], [78.8, 2375.0], [78.9, 2375.0], [79.0, 2376.0], [79.1, 2376.0], [79.2, 2384.0], [79.3, 2392.0], [79.4, 2392.0], [79.5, 2393.0], [79.6, 2393.0], [79.7, 2396.0], [79.8, 2401.0], [79.9, 2401.0], [80.0, 2407.0], [80.1, 2407.0], [80.2, 2417.0], [80.3, 2417.0], [80.4, 2431.0], [80.5, 2433.0], [80.6, 2433.0], [80.7, 2435.0], [80.8, 2435.0], [80.9, 2443.0], [81.0, 2443.0], [81.1, 2443.0], [81.2, 2450.0], [81.3, 2450.0], [81.4, 2450.0], [81.5, 2452.0], [81.6, 2452.0], [81.7, 2457.0], [81.8, 2457.0], [81.9, 2457.0], [82.0, 2474.0], [82.1, 2474.0], [82.2, 2478.0], [82.3, 2478.0], [82.4, 2479.0], [82.5, 2481.0], [82.6, 2481.0], [82.7, 2482.0], [82.8, 2482.0], [82.9, 2483.0], [83.0, 2483.0], [83.1, 2483.0], [83.2, 2487.0], [83.3, 2487.0], [83.4, 2501.0], [83.5, 2509.0], [83.6, 2509.0], [83.7, 2518.0], [83.8, 2518.0], [83.9, 2521.0], [84.0, 2528.0], [84.1, 2528.0], [84.2, 2543.0], [84.3, 2543.0], [84.4, 2548.0], [84.5, 2549.0], [84.6, 2549.0], [84.7, 2552.0], [84.8, 2552.0], [84.9, 2555.0], [85.0, 2563.0], [85.1, 2563.0], [85.2, 2586.0], [85.3, 2586.0], [85.4, 2596.0], [85.5, 2605.0], [85.6, 2605.0], [85.7, 2612.0], [85.8, 2612.0], [85.9, 2619.0], [86.0, 2632.0], [86.1, 2632.0], [86.2, 2644.0], [86.3, 2644.0], [86.4, 2657.0], [86.5, 2667.0], [86.6, 2667.0], [86.7, 2670.0], [86.8, 2670.0], [86.9, 2675.0], [87.0, 2687.0], [87.1, 2687.0], [87.2, 2687.0], [87.3, 2687.0], [87.4, 2697.0], [87.5, 2698.0], [87.6, 2698.0], [87.7, 2700.0], [87.8, 2700.0], [87.9, 2729.0], [88.0, 2730.0], [88.1, 2730.0], [88.2, 2742.0], [88.3, 2742.0], [88.4, 2747.0], [88.5, 2767.0], [88.6, 2767.0], [88.7, 2786.0], [88.8, 2786.0], [88.9, 2803.0], [89.0, 2813.0], [89.1, 2813.0], [89.2, 2832.0], [89.3, 2832.0], [89.4, 2833.0], [89.5, 2864.0], [89.6, 2864.0], [89.7, 2870.0], [89.8, 2870.0], [89.9, 2891.0], [90.0, 2896.0], [90.1, 2896.0], [90.2, 2897.0], [90.3, 2897.0], [90.4, 2905.0], [90.5, 2915.0], [90.6, 2915.0], [90.7, 2918.0], [90.8, 2918.0], [90.9, 2922.0], [91.0, 2929.0], [91.1, 2929.0], [91.2, 2931.0], [91.3, 2931.0], [91.4, 2952.0], [91.5, 2962.0], [91.6, 2962.0], [91.7, 2965.0], [91.8, 2965.0], [91.9, 2987.0], [92.0, 2992.0], [92.1, 2992.0], [92.2, 3004.0], [92.3, 3004.0], [92.4, 3037.0], [92.5, 3045.0], [92.6, 3045.0], [92.7, 3061.0], [92.8, 3061.0], [92.9, 3100.0], [93.0, 3137.0], [93.1, 3137.0], [93.2, 3150.0], [93.3, 3150.0], [93.4, 3155.0], [93.5, 3158.0], [93.6, 3158.0], [93.7, 3203.0], [93.8, 3203.0], [93.9, 3204.0], [94.0, 3290.0], [94.1, 3290.0], [94.2, 3303.0], [94.3, 3303.0], [94.4, 3353.0], [94.5, 3364.0], [94.6, 3364.0], [94.7, 3426.0], [94.8, 3426.0], [94.9, 3437.0], [95.0, 3510.0], [95.1, 3510.0], [95.2, 3551.0], [95.3, 3551.0], [95.4, 3660.0], [95.5, 3663.0], [95.6, 3663.0], [95.7, 3769.0], [95.8, 3769.0], [95.9, 3776.0], [96.0, 3910.0], [96.1, 3910.0], [96.2, 3976.0], [96.3, 3976.0], [96.4, 4084.0], [96.5, 4090.0], [96.6, 4090.0], [96.7, 4127.0], [96.8, 4127.0], [96.9, 4156.0], [97.0, 4371.0], [97.1, 4371.0], [97.2, 4636.0], [97.3, 4636.0], [97.4, 4758.0], [97.5, 4809.0], [97.6, 4809.0], [97.7, 4835.0], [97.8, 4835.0], [97.9, 4924.0], [98.0, 5065.0], [98.1, 5065.0], [98.2, 5072.0], [98.3, 5072.0], [98.4, 5082.0], [98.5, 5157.0], [98.6, 5157.0], [98.7, 5182.0], [98.8, 5182.0], [98.9, 5227.0], [99.0, 5342.0], [99.1, 5342.0], [99.2, 5359.0], [99.3, 5359.0], [99.4, 6017.0], [99.5, 6250.0], [99.6, 6250.0], [99.7, 7024.0], [99.8, 7024.0], [99.9, 12961.0]], "isOverall": false, "label": "Mane_Page", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 1000.0, "maxY": 103.0, "series": [{"data": [[13500.0, 1.0], [1200.0, 2.0], [1300.0, 12.0], [1400.0, 27.0], [1500.0, 20.0], [1600.0, 59.0], [1700.0, 52.0], [1800.0, 46.0], [1900.0, 50.0], [2000.0, 61.0], [2100.0, 44.0], [2300.0, 43.0], [2200.0, 46.0], [2400.0, 35.0], [2500.0, 25.0], [2600.0, 14.0], [2700.0, 15.0], [2800.0, 8.0], [2900.0, 9.0], [3000.0, 6.0], [3100.0, 3.0], [3200.0, 4.0], [3300.0, 2.0], [3400.0, 2.0], [3500.0, 1.0], [3900.0, 1.0], [4000.0, 1.0], [4100.0, 1.0], [4200.0, 2.0], [4400.0, 1.0], [4700.0, 1.0], [5200.0, 1.0], [5400.0, 1.0], [5800.0, 1.0], [6000.0, 1.0]], "isOverall": false, "label": "Beauty_1_Page", "isController": false}, {"data": [[1000.0, 4.0], [1100.0, 28.0], [1200.0, 72.0], [1300.0, 87.0], [1400.0, 103.0], [1500.0, 71.0], [1600.0, 60.0], [1700.0, 36.0], [1800.0, 35.0], [1900.0, 21.0], [2000.0, 17.0], [2100.0, 21.0], [2200.0, 10.0], [2300.0, 8.0], [2400.0, 4.0], [2500.0, 3.0], [2600.0, 3.0], [2800.0, 1.0], [2700.0, 5.0], [2900.0, 1.0], [3300.0, 3.0], [3700.0, 1.0], [4300.0, 1.0], [4200.0, 1.0], [4900.0, 2.0]], "isOverall": false, "label": "Expert_Page", "isController": false}, {"data": [[12900.0, 1.0], [1300.0, 2.0], [1400.0, 10.0], [1500.0, 30.0], [1600.0, 56.0], [1700.0, 84.0], [1800.0, 64.0], [1900.0, 70.0], [2000.0, 54.0], [2100.0, 37.0], [2200.0, 39.0], [2300.0, 32.0], [2400.0, 21.0], [2500.0, 13.0], [2600.0, 13.0], [2700.0, 7.0], [2800.0, 9.0], [2900.0, 11.0], [3000.0, 4.0], [3100.0, 5.0], [3200.0, 3.0], [3300.0, 3.0], [3400.0, 2.0], [3500.0, 2.0], [3600.0, 2.0], [3700.0, 2.0], [3900.0, 2.0], [4000.0, 2.0], [4100.0, 2.0], [4300.0, 1.0], [4600.0, 1.0], [4700.0, 1.0], [4800.0, 2.0], [5000.0, 3.0], [4900.0, 1.0], [5100.0, 2.0], [5300.0, 2.0], [5200.0, 1.0], [6000.0, 1.0], [6200.0, 1.0], [7000.0, 1.0]], "isOverall": false, "label": "Mane_Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 13500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 347.0, "minX": 1.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1448.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 347.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1448.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.6666666666666667, "minX": 1.74119808E12, "maxY": 2.0, "series": [{"data": [[1.7411997E12, 2.0], [1.7411994E12, 2.0], [1.7411991E12, 2.0], [1.7411988E12, 2.0], [1.7411985E12, 2.0], [1.7411982E12, 2.0], [1.74119808E12, 1.6666666666666667], [1.74119982E12, 2.0], [1.74119952E12, 2.0], [1.74119922E12, 2.0], [1.74119892E12, 2.0], [1.74119862E12, 2.0], [1.74119832E12, 2.0], [1.74119964E12, 2.0], [1.74119934E12, 2.0], [1.74119904E12, 2.0], [1.74119874E12, 2.0], [1.74119844E12, 2.0], [1.74119814E12, 2.0], [1.74119976E12, 2.0], [1.74119946E12, 2.0], [1.74119916E12, 2.0], [1.74119886E12, 2.0], [1.74119856E12, 2.0], [1.74119826E12, 2.0], [1.74119988E12, 1.9852941176470589], [1.74119958E12, 2.0], [1.74119928E12, 2.0], [1.74119898E12, 2.0], [1.74119868E12, 2.0], [1.74119838E12, 2.0]], "isOverall": false, "label": "jp@gc - Stepping Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74119988E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1621.5501672240807, "minX": 1.0, "maxY": 2188.5963149078757, "series": [{"data": [[2.0, 2147.0551839464874]], "isOverall": false, "label": "Beauty_1_Page", "isController": false}, {"data": [[2.0, 2147.0551839464874]], "isOverall": false, "label": "Beauty_1_Page-Aggregated", "isController": false}, {"data": [[2.0, 1621.5501672240807]], "isOverall": false, "label": "Expert_Page", "isController": false}, {"data": [[2.0, 1621.5501672240807]], "isOverall": false, "label": "Expert_Page-Aggregated", "isController": false}, {"data": [[1.0, 2129.5], [2.0, 2188.5963149078757]], "isOverall": false, "label": "Mane_Page", "isController": false}, {"data": [[1.9966611018363938, 2188.3989983305505]], "isOverall": false, "label": "Mane_Page-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 5.85, "minX": 1.74119808E12, "maxY": 1603748.7666666666, "series": [{"data": [[1.7411997E12, 1554590.6666666667], [1.7411994E12, 1531013.0], [1.7411991E12, 1603748.7666666666], [1.7411988E12, 1295509.4666666666], [1.7411985E12, 1063160.6166666667], [1.7411982E12, 1271931.2], [1.74119808E12, 66460.7], [1.74119982E12, 1507402.3333333333], [1.74119952E12, 1504272.7166666666], [1.74119922E12, 1504277.1666666667], [1.74119892E12, 1511724.5333333334], [1.74119862E12, 1298639.8], [1.74119832E12, 1341511.8666666667], [1.74119964E12, 1534153.0833333333], [1.74119934E12, 1507394.2], [1.74119904E12, 1345823.3666666667], [1.74119874E12, 1322244.8666666667], [1.74119844E12, 703365.9666666667], [1.74119814E12, 1279386.5166666666], [1.74119976E12, 1573874.6333333333], [1.74119946E12, 1530996.3333333333], [1.74119916E12, 1434704.7666666666], [1.74119886E12, 1302954.0333333334], [1.74119856E12, 1206645.4166666667], [1.74119826E12, 1163778.7666666666], [1.74119988E12, 1581334.5833333333], [1.74119958E12, 1511728.2666666666], [1.74119928E12, 1581320.3833333333], [1.74119898E12, 1526695.0166666666], [1.74119868E12, 1322259.7166666666], [1.74119838E12, 1156322.25]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.7411997E12, 136.43333333333334], [1.7411994E12, 134.56666666666666], [1.7411991E12, 140.95], [1.7411988E12, 114.08333333333333], [1.7411985E12, 93.86666666666666], [1.7411982E12, 112.21666666666667], [1.74119808E12, 5.85], [1.74119982E12, 132.7], [1.74119952E12, 132.43333333333334], [1.74119922E12, 132.43333333333334], [1.74119892E12, 132.45], [1.74119862E12, 114.35], [1.74119832E12, 118.33333333333333], [1.74119964E12, 134.83333333333334], [1.74119934E12, 132.7], [1.74119904E12, 118.08333333333333], [1.74119874E12, 116.21666666666667], [1.74119844E12, 61.18333333333333], [1.74119814E12, 112.23333333333333], [1.74119976E12, 138.55], [1.74119946E12, 134.56666666666666], [1.74119916E12, 126.31666666666666], [1.74119886E12, 114.1], [1.74119856E12, 105.85], [1.74119826E12, 101.86666666666666], [1.74119988E12, 138.56666666666666], [1.74119958E12, 132.45], [1.74119928E12, 138.56666666666666], [1.74119898E12, 134.81666666666666], [1.74119868E12, 116.21666666666667], [1.74119838E12, 101.85]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74119988E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1396.4545454545453, "minX": 1.74119808E12, "maxY": 3896.7000000000003, "series": [{"data": [[1.7411997E12, 2020.8181818181818], [1.7411994E12, 1918.3636363636365], [1.7411991E12, 1880.9583333333335], [1.7411988E12, 2322.5555555555557], [1.7411985E12, 2625.4666666666662], [1.7411982E12, 2523.7777777777783], [1.74119982E12, 1963.4545454545455], [1.74119952E12, 2026.9999999999998], [1.74119922E12, 1977.0], [1.74119892E12, 1986.409090909091], [1.74119862E12, 2384.4736842105262], [1.74119832E12, 2260.157894736842], [1.74119964E12, 1863.1304347826085], [1.74119934E12, 2058.4545454545455], [1.74119904E12, 2060.894736842105], [1.74119874E12, 2306.157894736842], [1.74119844E12, 3372.2727272727275], [1.74119814E12, 2413.4736842105262], [1.74119976E12, 1821.5454545454543], [1.74119946E12, 1923.181818181818], [1.74119916E12, 2047.2], [1.74119886E12, 2436.263157894737], [1.74119856E12, 2435.6470588235297], [1.74119826E12, 2568.1176470588234], [1.74119988E12, 1837.8695652173913], [1.74119958E12, 1986.8636363636363], [1.74119928E12, 1826.2173913043475], [1.74119898E12, 1978.1363636363637], [1.74119868E12, 2344.4736842105262], [1.74119838E12, 2593.5000000000005]], "isOverall": false, "label": "Beauty_1_Page", "isController": false}, {"data": [[1.7411997E12, 1495.3636363636365], [1.7411994E12, 1505.9545454545455], [1.7411991E12, 1435.1739130434783], [1.7411988E12, 1815.0], [1.7411985E12, 1906.4375000000002], [1.7411982E12, 1794.8421052631581], [1.74119808E12, 2020.0], [1.74119982E12, 1486.681818181818], [1.74119952E12, 1537.3636363636363], [1.74119922E12, 1500.8636363636367], [1.74119892E12, 1550.2380952380952], [1.74119862E12, 1768.5789473684215], [1.74119832E12, 1702.7], [1.74119964E12, 1447.772727272727], [1.74119934E12, 1508.0454545454545], [1.74119904E12, 1831.578947368421], [1.74119874E12, 1734.0526315789475], [1.74119844E12, 1928.0], [1.74119814E12, 1848.5], [1.74119976E12, 1516.608695652174], [1.74119946E12, 1519.8636363636363], [1.74119916E12, 1770.5238095238096], [1.74119886E12, 1532.2222222222222], [1.74119856E12, 1717.5294117647059], [1.74119826E12, 1927.9375000000002], [1.74119988E12, 1564.409090909091], [1.74119958E12, 1455.6190476190477], [1.74119928E12, 1396.4545454545453], [1.74119898E12, 1490.4347826086953], [1.74119868E12, 1557.8421052631581], [1.74119838E12, 1980.4705882352941]], "isOverall": false, "label": "Expert_Page", "isController": false}, {"data": [[1.7411997E12, 1832.6521739130437], [1.7411994E12, 1996.4090909090905], [1.7411991E12, 1898.4545454545457], [1.7411988E12, 2287.105263157894], [1.7411985E12, 2380.6], [1.7411982E12, 2323.7222222222226], [1.74119808E12, 2139.0], [1.74119982E12, 2135.6190476190477], [1.74119952E12, 2071.3636363636365], [1.74119922E12, 2063.318181818182], [1.74119892E12, 1982.1363636363637], [1.74119862E12, 2377.666666666667], [1.74119832E12, 2252.0000000000005], [1.74119964E12, 2139.5238095238096], [1.74119934E12, 2076.8095238095243], [1.74119904E12, 2340.55], [1.74119874E12, 2247.2105263157896], [1.74119844E12, 3896.7000000000003], [1.74119814E12, 2373.0555555555557], [1.74119976E12, 1944.6956521739132], [1.74119946E12, 1946.8636363636363], [1.74119916E12, 1992.047619047619], [1.74119886E12, 2414.315789473684], [1.74119856E12, 2671.8333333333335], [1.74119826E12, 2585.705882352941], [1.74119988E12, 1840.8260869565217], [1.74119958E12, 2067.818181818182], [1.74119928E12, 2015.4782608695657], [1.74119898E12, 1987.6666666666667], [1.74119868E12, 2388.0], [1.74119838E12, 2611.3529411764707]], "isOverall": false, "label": "Mane_Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74119988E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1099.7727272727275, "minX": 1.74119808E12, "maxY": 2688.5454545454545, "series": [{"data": [[1.7411997E12, 1597.7727272727273], [1.7411994E12, 1552.409090909091], [1.7411991E12, 1498.3333333333333], [1.7411988E12, 1835.5], [1.7411985E12, 2113.133333333333], [1.7411982E12, 2018.8888888888887], [1.74119982E12, 1480.2272727272727], [1.74119952E12, 1610.5714285714287], [1.74119922E12, 1565.0476190476193], [1.74119892E12, 1586.3181818181818], [1.74119862E12, 1815.5263157894733], [1.74119832E12, 1796.3157894736842], [1.74119964E12, 1481.1739130434783], [1.74119934E12, 1648.1818181818182], [1.74119904E12, 1576.7368421052631], [1.74119874E12, 1909.1052631578946], [1.74119844E12, 2688.5454545454545], [1.74119814E12, 1927.7368421052633], [1.74119976E12, 1376.9545454545455], [1.74119946E12, 1519.1363636363637], [1.74119916E12, 1608.4], [1.74119886E12, 1927.3684210526317], [1.74119856E12, 1888.7058823529412], [1.74119826E12, 2032.8823529411766], [1.74119988E12, 1454.3478260869563], [1.74119958E12, 1543.4545454545455], [1.74119928E12, 1454.3478260869563], [1.74119898E12, 1595.8636363636363], [1.74119868E12, 1982.2105263157894], [1.74119838E12, 1980.3750000000002]], "isOverall": false, "label": "Beauty_1_Page", "isController": false}, {"data": [[1.7411997E12, 1195.6363636363635], [1.7411994E12, 1195.1363636363635], [1.7411991E12, 1125.8260869565222], [1.7411988E12, 1438.684210526316], [1.7411985E12, 1457.375], [1.7411982E12, 1376.894736842105], [1.74119808E12, 1224.0], [1.74119982E12, 1166.9090909090912], [1.74119952E12, 1207.3181818181818], [1.74119922E12, 1154.5], [1.74119892E12, 1220.6666666666667], [1.74119862E12, 1394.8421052631581], [1.74119832E12, 1320.95], [1.74119964E12, 1122.3181818181818], [1.74119934E12, 1181.681818181818], [1.74119904E12, 1180.8947368421052], [1.74119874E12, 1342.0526315789473], [1.74119844E12, 1477.5555555555557], [1.74119814E12, 1469.2222222222222], [1.74119976E12, 1140.6086956521738], [1.74119946E12, 1176.409090909091], [1.74119916E12, 1419.6666666666665], [1.74119886E12, 1158.888888888889], [1.74119856E12, 1295.5294117647059], [1.74119826E12, 1531.6875000000002], [1.74119988E12, 1258.1363636363635], [1.74119958E12, 1126.0], [1.74119928E12, 1099.7727272727275], [1.74119898E12, 1194.0000000000002], [1.74119868E12, 1275.7894736842104], [1.74119838E12, 1563.5294117647059]], "isOverall": false, "label": "Expert_Page", "isController": false}, {"data": [[1.7411997E12, 1271.3043478260868], [1.7411994E12, 1477.5909090909088], [1.7411991E12, 1384.090909090909], [1.7411988E12, 1644.0], [1.7411985E12, 1798.1333333333332], [1.7411982E12, 1616.7777777777778], [1.74119808E12, 1659.0], [1.74119982E12, 1555.047619047619], [1.74119952E12, 1477.5], [1.74119922E12, 1407.5454545454547], [1.74119892E12, 1355.590909090909], [1.74119862E12, 1711.5555555555554], [1.74119832E12, 1614.3157894736842], [1.74119964E12, 1565.4285714285716], [1.74119934E12, 1511.8095238095239], [1.74119904E12, 1377.9499999999998], [1.74119874E12, 1680.6315789473686], [1.74119844E12, 2565.4], [1.74119814E12, 1751.388888888889], [1.74119976E12, 1313.2608695652175], [1.74119946E12, 1361.2272727272727], [1.74119916E12, 1402.7142857142858], [1.74119886E12, 1801.105263157895], [1.74119856E12, 1957.1666666666667], [1.74119826E12, 1904.7058823529414], [1.74119988E12, 1281.5652173913045], [1.74119958E12, 1479.6363636363637], [1.74119928E12, 1482.9565217391305], [1.74119898E12, 1411.0], [1.74119868E12, 1823.6315789473683], [1.74119838E12, 2034.1764705882354]], "isOverall": false, "label": "Mane_Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74119988E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.74119808E12, "maxY": 192.5, "series": [{"data": [[1.7411997E12, 0.0], [1.7411994E12, 0.0], [1.7411991E12, 0.0], [1.7411988E12, 0.0], [1.7411985E12, 0.0], [1.7411982E12, 0.0], [1.74119982E12, 0.0], [1.74119952E12, 0.0], [1.74119922E12, 0.0], [1.74119892E12, 0.0], [1.74119862E12, 0.0], [1.74119832E12, 0.0], [1.74119964E12, 0.0], [1.74119934E12, 0.0], [1.74119904E12, 0.0], [1.74119874E12, 0.0], [1.74119844E12, 0.0], [1.74119814E12, 0.0], [1.74119976E12, 0.0], [1.74119946E12, 0.0], [1.74119916E12, 0.0], [1.74119886E12, 0.0], [1.74119856E12, 0.0], [1.74119826E12, 0.0], [1.74119988E12, 0.0], [1.74119958E12, 0.0], [1.74119928E12, 0.0], [1.74119898E12, 0.0], [1.74119868E12, 0.0], [1.74119838E12, 0.0]], "isOverall": false, "label": "Beauty_1_Page", "isController": false}, {"data": [[1.7411997E12, 0.0], [1.7411994E12, 0.0], [1.7411991E12, 0.0], [1.7411988E12, 0.0], [1.7411985E12, 0.0], [1.7411982E12, 0.0], [1.74119808E12, 0.0], [1.74119982E12, 0.0], [1.74119952E12, 0.0], [1.74119922E12, 0.0], [1.74119892E12, 0.0], [1.74119862E12, 0.0], [1.74119832E12, 0.0], [1.74119964E12, 0.0], [1.74119934E12, 0.0], [1.74119904E12, 0.0], [1.74119874E12, 0.0], [1.74119844E12, 0.0], [1.74119814E12, 0.0], [1.74119976E12, 0.0], [1.74119946E12, 0.0], [1.74119916E12, 0.0], [1.74119886E12, 0.0], [1.74119856E12, 0.0], [1.74119826E12, 0.0], [1.74119988E12, 0.0], [1.74119958E12, 0.0], [1.74119928E12, 0.0], [1.74119898E12, 0.0], [1.74119868E12, 0.0], [1.74119838E12, 0.0]], "isOverall": false, "label": "Expert_Page", "isController": false}, {"data": [[1.7411997E12, 68.34782608695652], [1.7411994E12, 63.18181818181818], [1.7411991E12, 71.31818181818183], [1.7411988E12, 67.89473684210526], [1.7411985E12, 66.4], [1.7411982E12, 105.72222222222223], [1.74119808E12, 192.5], [1.74119982E12, 71.23809523809523], [1.74119952E12, 69.72727272727273], [1.74119922E12, 69.77272727272727], [1.74119892E12, 67.5909090909091], [1.74119862E12, 66.0], [1.74119832E12, 72.36842105263156], [1.74119964E12, 71.99999999999999], [1.74119934E12, 68.14285714285714], [1.74119904E12, 64.14999999999999], [1.74119874E12, 70.52631578947367], [1.74119844E12, 79.0], [1.74119814E12, 73.05555555555556], [1.74119976E12, 71.3913043478261], [1.74119946E12, 67.40909090909092], [1.74119916E12, 70.14285714285715], [1.74119886E12, 74.84210526315788], [1.74119856E12, 74.27777777777779], [1.74119826E12, 65.82352941176474], [1.74119988E12, 69.39130434782608], [1.74119958E12, 72.04545454545455], [1.74119928E12, 66.1304347826087], [1.74119898E12, 70.47619047619047], [1.74119868E12, 69.57894736842105], [1.74119838E12, 70.47058823529412]], "isOverall": false, "label": "Mane_Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74119988E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1071.0, "minX": 1.74119808E12, "maxY": 13506.0, "series": [{"data": [[1.7411997E12, 3038.0], [1.7411994E12, 3437.0], [1.7411991E12, 3203.0], [1.7411988E12, 4924.0], [1.7411985E12, 5065.0], [1.7411982E12, 4156.0], [1.74119808E12, 2253.0], [1.74119982E12, 5182.0], [1.74119952E12, 3150.0], [1.74119922E12, 3551.0], [1.74119892E12, 3347.0], [1.74119862E12, 3426.0], [1.74119832E12, 3155.0], [1.74119964E12, 4259.0], [1.74119934E12, 5410.0], [1.74119904E12, 5359.0], [1.74119874E12, 4283.0], [1.74119844E12, 13506.0], [1.74119814E12, 3663.0], [1.74119976E12, 3353.0], [1.74119946E12, 3230.0], [1.74119916E12, 4219.0], [1.74119886E12, 6089.0], [1.74119856E12, 5227.0], [1.74119826E12, 6017.0], [1.74119988E12, 2545.0], [1.74119958E12, 3414.0], [1.74119928E12, 3776.0], [1.74119898E12, 2864.0], [1.74119868E12, 7024.0], [1.74119838E12, 5342.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.7411997E12, 1130.0], [1.7411994E12, 1222.0], [1.7411991E12, 1120.0], [1.7411988E12, 1165.0], [1.7411985E12, 1347.0], [1.7411982E12, 1205.0], [1.74119808E12, 2020.0], [1.74119982E12, 1217.0], [1.74119952E12, 1132.0], [1.74119922E12, 1176.0], [1.74119892E12, 1143.0], [1.74119862E12, 1311.0], [1.74119832E12, 1266.0], [1.74119964E12, 1099.0], [1.74119934E12, 1124.0], [1.74119904E12, 1161.0], [1.74119874E12, 1307.0], [1.74119844E12, 1292.0], [1.74119814E12, 1259.0], [1.74119976E12, 1074.0], [1.74119946E12, 1135.0], [1.74119916E12, 1161.0], [1.74119886E12, 1251.0], [1.74119856E12, 1132.0], [1.74119826E12, 1311.0], [1.74119988E12, 1213.0], [1.74119958E12, 1071.0], [1.74119928E12, 1109.0], [1.74119898E12, 1193.0], [1.74119868E12, 1141.0], [1.74119838E12, 1283.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.7411997E12, 2304.8], [1.7411994E12, 2287.1], [1.7411991E12, 2134.0], [1.7411988E12, 2845.100000000001], [1.7411985E12, 3469.3000000000015], [1.7411982E12, 2956.4], [1.74119808E12, 2253.0], [1.74119982E12, 2483.0], [1.74119952E12, 2504.2], [1.74119922E12, 2459.6], [1.74119892E12, 2350.8], [1.74119862E12, 2895.3], [1.74119832E12, 2627.3], [1.74119964E12, 2462.900000000001], [1.74119934E12, 2467.7999999999997], [1.74119904E12, 2813.100000000001], [1.74119874E12, 2833.6], [1.74119844E12, 6016.0000000000055], [1.74119814E12, 2923.0], [1.74119976E12, 2225.1], [1.74119946E12, 2353.8], [1.74119916E12, 2389.7000000000003], [1.74119886E12, 3048.3000000000015], [1.74119856E12, 3234.800000000001], [1.74119826E12, 3039.7], [1.74119988E12, 2184.6], [1.74119958E12, 2332.4], [1.74119928E12, 2238.8], [1.74119898E12, 2446.1], [1.74119868E12, 2956.0000000000005], [1.74119838E12, 4416.499999999999]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.7411997E12, 3038.0], [1.7411994E12, 3437.0], [1.7411991E12, 3203.0], [1.7411988E12, 4924.0], [1.7411985E12, 5065.0], [1.7411982E12, 4156.0], [1.74119808E12, 2253.0], [1.74119982E12, 5182.0], [1.74119952E12, 3150.0], [1.74119922E12, 3551.0], [1.74119892E12, 3347.0], [1.74119862E12, 3426.0], [1.74119832E12, 3155.0], [1.74119964E12, 4259.0], [1.74119934E12, 5410.0], [1.74119904E12, 5359.0], [1.74119874E12, 4283.0], [1.74119844E12, 13506.0], [1.74119814E12, 3663.0], [1.74119976E12, 3353.0], [1.74119946E12, 3230.0], [1.74119916E12, 4219.0], [1.74119886E12, 6089.0], [1.74119856E12, 5227.0], [1.74119826E12, 6017.0], [1.74119988E12, 2545.0], [1.74119958E12, 3414.0], [1.74119928E12, 3776.0], [1.74119898E12, 2864.0], [1.74119868E12, 7024.0], [1.74119838E12, 5342.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.7411997E12, 1776.0], [1.7411994E12, 1723.5], [1.7411991E12, 1700.0], [1.7411988E12, 2006.5], [1.7411985E12, 2153.5], [1.7411982E12, 2118.0], [1.74119808E12, 2025.0], [1.74119982E12, 1702.0], [1.74119952E12, 1791.0], [1.74119922E12, 1707.0], [1.74119892E12, 1806.0], [1.74119862E12, 2148.5], [1.74119832E12, 2046.5], [1.74119964E12, 1719.0], [1.74119934E12, 1740.0], [1.74119904E12, 1885.5], [1.74119874E12, 1933.0], [1.74119844E12, 2233.0], [1.74119814E12, 2174.0], [1.74119976E12, 1754.0], [1.74119946E12, 1722.5], [1.74119916E12, 1880.0], [1.74119886E12, 1878.0], [1.74119856E12, 2212.5], [1.74119826E12, 2126.5], [1.74119988E12, 1766.0], [1.74119958E12, 1778.0], [1.74119928E12, 1630.5], [1.74119898E12, 1722.5], [1.74119868E12, 1940.0], [1.74119838E12, 2148.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.7411997E12, 2423.999999999999], [1.7411994E12, 2622.35], [1.7411991E12, 2239.0], [1.7411988E12, 3407.5499999999993], [1.7411985E12, 4560.799999999999], [1.7411982E12, 3295.199999999998], [1.74119808E12, 2253.0], [1.74119982E12, 3215.6999999999975], [1.74119952E12, 2730.5999999999995], [1.74119922E12, 2809.099999999999], [1.74119892E12, 2684.699999999999], [1.74119862E12, 3156.7999999999997], [1.74119832E12, 2896.5499999999997], [1.74119964E12, 2965.2499999999995], [1.74119934E12, 2702.6], [1.74119904E12, 4403.699999999999], [1.74119874E12, 3202.6999999999944], [1.74119844E12, 13206.25], [1.74119814E12, 3075.6], [1.74119976E12, 2397.1499999999996], [1.74119946E12, 2636.75], [1.74119916E12, 2866.9499999999975], [1.74119886E12, 4701.4], [1.74119856E12, 4267.549999999996], [1.74119826E12, 5354.549999999996], [1.74119988E12, 2267.65], [1.74119958E12, 2818.399999999999], [1.74119928E12, 2352.95], [1.74119898E12, 2522.45], [1.74119868E12, 3484.8999999999887], [1.74119838E12, 5034.15]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74119988E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1820.0, "minX": 1.0, "maxY": 1888.5, "series": [{"data": [[1.0, 1820.0], [2.0, 1888.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1356.0, "minX": 1.0, "maxY": 1386.0, "series": [{"data": [[1.0, 1356.0], [2.0, 1386.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.08333333333333333, "minX": 1.74119808E12, "maxY": 1.15, "series": [{"data": [[1.7411997E12, 1.1166666666666667], [1.7411994E12, 1.1], [1.7411991E12, 1.15], [1.7411988E12, 0.9333333333333333], [1.7411985E12, 0.8], [1.7411982E12, 0.9166666666666666], [1.74119808E12, 0.08333333333333333], [1.74119982E12, 1.0833333333333333], [1.74119952E12, 1.0833333333333333], [1.74119922E12, 1.0833333333333333], [1.74119892E12, 1.0833333333333333], [1.74119862E12, 0.9333333333333333], [1.74119832E12, 0.9666666666666667], [1.74119964E12, 1.1], [1.74119934E12, 1.0833333333333333], [1.74119904E12, 0.9666666666666667], [1.74119874E12, 0.95], [1.74119844E12, 0.4666666666666667], [1.74119814E12, 0.9166666666666666], [1.74119976E12, 1.1333333333333333], [1.74119946E12, 1.1], [1.74119916E12, 1.0333333333333334], [1.74119886E12, 0.9333333333333333], [1.74119856E12, 0.8666666666666667], [1.74119826E12, 0.8333333333333334], [1.74119988E12, 1.1], [1.74119958E12, 1.0833333333333333], [1.74119928E12, 1.1333333333333333], [1.74119898E12, 1.1], [1.74119868E12, 0.95], [1.74119838E12, 0.8333333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74119988E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.74119808E12, "maxY": 1.15, "series": [{"data": [[1.7411997E12, 1.1166666666666667], [1.7411994E12, 1.1], [1.7411991E12, 1.15], [1.7411988E12, 0.9333333333333333], [1.7411985E12, 0.7666666666666667], [1.7411982E12, 0.9166666666666666], [1.74119808E12, 0.05], [1.74119982E12, 1.0833333333333333], [1.74119952E12, 1.0833333333333333], [1.74119922E12, 1.0833333333333333], [1.74119892E12, 1.0833333333333333], [1.74119862E12, 0.9333333333333333], [1.74119832E12, 0.9666666666666667], [1.74119964E12, 1.1], [1.74119934E12, 1.0833333333333333], [1.74119904E12, 0.9666666666666667], [1.74119874E12, 0.95], [1.74119844E12, 0.5], [1.74119814E12, 0.9166666666666666], [1.74119976E12, 1.1333333333333333], [1.74119946E12, 1.1], [1.74119916E12, 1.0333333333333334], [1.74119886E12, 0.9333333333333333], [1.74119856E12, 0.8666666666666667], [1.74119826E12, 0.8333333333333334], [1.74119988E12, 1.1333333333333333], [1.74119958E12, 1.0833333333333333], [1.74119928E12, 1.1333333333333333], [1.74119898E12, 1.1], [1.74119868E12, 0.95], [1.74119838E12, 0.8333333333333334]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74119988E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.74119808E12, "maxY": 0.4, "series": [{"data": [[1.7411997E12, 0.36666666666666664], [1.7411994E12, 0.36666666666666664], [1.7411991E12, 0.4], [1.7411988E12, 0.3], [1.7411985E12, 0.25], [1.7411982E12, 0.3], [1.74119982E12, 0.36666666666666664], [1.74119952E12, 0.35], [1.74119922E12, 0.35], [1.74119892E12, 0.36666666666666664], [1.74119862E12, 0.31666666666666665], [1.74119832E12, 0.31666666666666665], [1.74119964E12, 0.38333333333333336], [1.74119934E12, 0.36666666666666664], [1.74119904E12, 0.31666666666666665], [1.74119874E12, 0.31666666666666665], [1.74119844E12, 0.18333333333333332], [1.74119814E12, 0.31666666666666665], [1.74119976E12, 0.36666666666666664], [1.74119946E12, 0.36666666666666664], [1.74119916E12, 0.3333333333333333], [1.74119886E12, 0.31666666666666665], [1.74119856E12, 0.2833333333333333], [1.74119826E12, 0.2833333333333333], [1.74119988E12, 0.38333333333333336], [1.74119958E12, 0.36666666666666664], [1.74119928E12, 0.38333333333333336], [1.74119898E12, 0.36666666666666664], [1.74119868E12, 0.31666666666666665], [1.74119838E12, 0.26666666666666666]], "isOverall": false, "label": "Beauty_1_Page-success", "isController": false}, {"data": [[1.7411997E12, 0.36666666666666664], [1.7411994E12, 0.36666666666666664], [1.7411991E12, 0.38333333333333336], [1.7411988E12, 0.31666666666666665], [1.7411985E12, 0.26666666666666666], [1.7411982E12, 0.31666666666666665], [1.74119808E12, 0.016666666666666666], [1.74119982E12, 0.36666666666666664], [1.74119952E12, 0.36666666666666664], [1.74119922E12, 0.36666666666666664], [1.74119892E12, 0.35], [1.74119862E12, 0.31666666666666665], [1.74119832E12, 0.3333333333333333], [1.74119964E12, 0.36666666666666664], [1.74119934E12, 0.36666666666666664], [1.74119904E12, 0.31666666666666665], [1.74119874E12, 0.31666666666666665], [1.74119844E12, 0.15], [1.74119814E12, 0.3], [1.74119976E12, 0.38333333333333336], [1.74119946E12, 0.36666666666666664], [1.74119916E12, 0.35], [1.74119886E12, 0.3], [1.74119856E12, 0.2833333333333333], [1.74119826E12, 0.26666666666666666], [1.74119988E12, 0.36666666666666664], [1.74119958E12, 0.35], [1.74119928E12, 0.36666666666666664], [1.74119898E12, 0.38333333333333336], [1.74119868E12, 0.31666666666666665], [1.74119838E12, 0.2833333333333333]], "isOverall": false, "label": "Expert_Page-success", "isController": false}, {"data": [[1.7411997E12, 0.38333333333333336], [1.7411994E12, 0.36666666666666664], [1.7411991E12, 0.36666666666666664], [1.7411988E12, 0.31666666666666665], [1.7411985E12, 0.25], [1.7411982E12, 0.3], [1.74119808E12, 0.03333333333333333], [1.74119982E12, 0.35], [1.74119952E12, 0.36666666666666664], [1.74119922E12, 0.36666666666666664], [1.74119892E12, 0.36666666666666664], [1.74119862E12, 0.3], [1.74119832E12, 0.31666666666666665], [1.74119964E12, 0.35], [1.74119934E12, 0.35], [1.74119904E12, 0.3333333333333333], [1.74119874E12, 0.31666666666666665], [1.74119844E12, 0.16666666666666666], [1.74119814E12, 0.3], [1.74119976E12, 0.38333333333333336], [1.74119946E12, 0.36666666666666664], [1.74119916E12, 0.35], [1.74119886E12, 0.31666666666666665], [1.74119856E12, 0.3], [1.74119826E12, 0.2833333333333333], [1.74119988E12, 0.38333333333333336], [1.74119958E12, 0.36666666666666664], [1.74119928E12, 0.38333333333333336], [1.74119898E12, 0.35], [1.74119868E12, 0.31666666666666665], [1.74119838E12, 0.2833333333333333]], "isOverall": false, "label": "Mane_Page-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74119988E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.74119808E12, "maxY": 1.15, "series": [{"data": [[1.7411997E12, 1.1166666666666667], [1.7411994E12, 1.1], [1.7411991E12, 1.15], [1.7411988E12, 0.9333333333333333], [1.7411985E12, 0.7666666666666667], [1.7411982E12, 0.9166666666666666], [1.74119808E12, 0.05], [1.74119982E12, 1.0833333333333333], [1.74119952E12, 1.0833333333333333], [1.74119922E12, 1.0833333333333333], [1.74119892E12, 1.0833333333333333], [1.74119862E12, 0.9333333333333333], [1.74119832E12, 0.9666666666666667], [1.74119964E12, 1.1], [1.74119934E12, 1.0833333333333333], [1.74119904E12, 0.9666666666666667], [1.74119874E12, 0.95], [1.74119844E12, 0.5], [1.74119814E12, 0.9166666666666666], [1.74119976E12, 1.1333333333333333], [1.74119946E12, 1.1], [1.74119916E12, 1.0333333333333334], [1.74119886E12, 0.9333333333333333], [1.74119856E12, 0.8666666666666667], [1.74119826E12, 0.8333333333333334], [1.74119988E12, 1.1333333333333333], [1.74119958E12, 1.0833333333333333], [1.74119928E12, 1.1333333333333333], [1.74119898E12, 1.1], [1.74119868E12, 0.95], [1.74119838E12, 0.8333333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74119988E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

